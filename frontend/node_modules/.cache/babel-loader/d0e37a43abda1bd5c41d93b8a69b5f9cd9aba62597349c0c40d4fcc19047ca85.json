{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ab214\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\shopppinglist\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport './App.css';\nimport { registerUser, loginUser, fetchShoppingLists, createShoppingList, deleteShoppingList, archiveShoppingList, unarchiveShoppingList, addParticipantByEmail, addItemToList, toggleItemStatus, deleteItem } from './services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [newParticipantEmail, setNewParticipantEmail] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [authMode, setAuthMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('en');\n  const COLORS = ['#0088FE', '#FF8042'];\n  const translations = {\n    en: {\n      shoppingList: 'Shopping List',\n      newListName: 'New list name',\n      addNewList: 'Add New List',\n      participants: 'Participants',\n      addParticipant: 'Add Participant',\n      logout: 'Logout',\n      darkMode: 'Dark Mode',\n      lightMode: 'Light Mode',\n      language: 'Language',\n      done: 'Done',\n      undone: 'Undone',\n      delete: 'Delete',\n      resolved: 'Resolved',\n      unresolved: 'Unresolved',\n      archived: 'Archived',\n      unarchive: 'Unarchive',\n      archive: 'Archive'\n    },\n    ru: {\n      shoppingList: 'Список покупок',\n      newListName: 'Новое имя списка',\n      addNewList: 'Добавить список',\n      participants: 'Участники',\n      addParticipant: 'Добавить участника',\n      logout: 'Выйти',\n      darkMode: 'Темная тема',\n      lightMode: 'Светлая тема',\n      language: 'Язык',\n      done: 'Готово',\n      undone: 'Отменить',\n      delete: 'Удалить',\n      resolved: 'Выполнено',\n      unresolved: 'Невыполнено',\n      archived: 'Архивировано',\n      unarchive: 'Разархивировать',\n      archive: 'Архивировать'\n    }\n    // Add other languages here (e.g., Czech, Ukrainian)\n  };\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchShoppingLists().then(lists => setShoppingLists(lists)).catch(err => console.error('Error fetching shopping lists:', err));\n    }\n  }, [isAuthenticated]);\n  const handleAuthSubmit = async () => {\n    try {\n      setAuthError('');\n      if (authMode === 'register') {\n        await registerUser({\n          email,\n          password,\n          username\n        });\n        setAuthMode('login');\n      } else {\n        const response = await loginUser({\n          email,\n          password\n        });\n        localStorage.setItem('token', response.token);\n        setIsAuthenticated(true);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setAuthError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Authentication failed');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setEmail('');\n    setPassword('');\n    setMenuOpen(false); // Close menu on logout\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.className = darkMode ? 'light-mode' : 'dark-mode';\n  };\n  const switchLanguage = lang => {\n    setLanguage(lang);\n  };\n  const handleAddNewList = async () => {\n    if (!newListName.trim()) {\n      console.error('List name is empty');\n      return;\n    }\n    try {\n      const newList = await createShoppingList(newListName);\n      setShoppingLists([...shoppingLists, newList]);\n      setNewListName('');\n      setSelectedListId(newList._id);\n    } catch (err) {\n      console.error('Failed to add new list:', err);\n    }\n  };\n  const handleDeleteList = async listId => {\n    try {\n      await deleteShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.filter(list => list._id !== listId));\n      if (listId === selectedListId) {\n        setSelectedListId(null);\n      }\n    } catch (err) {\n      console.error('Failed to delete list:', err);\n    }\n  };\n  const handleArchiveList = async listId => {\n    try {\n      const updatedList = await archiveShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === listId ? {\n        ...list,\n        archived: true\n      } : list));\n    } catch (err) {\n      console.error('Failed to archive list:', err);\n    }\n  };\n  const handleUnarchiveList = async listId => {\n    try {\n      const updatedList = await unarchiveShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === listId ? {\n        ...list,\n        archived: false\n      } : list));\n    } catch (err) {\n      console.error('Failed to unarchive list:', err);\n    }\n  };\n  const handleAddParticipant = async () => {\n    if (!newParticipantEmail.trim() || !selectedListId) {\n      console.error('No email or list selected');\n      return;\n    }\n    try {\n      const updatedList = await addParticipantByEmail(selectedListId, newParticipantEmail);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        participants: updatedList.participants\n      } : list));\n      setNewParticipantEmail('');\n    } catch (err) {\n      console.error('Failed to add participant:', err);\n    }\n  };\n  const handleAddItem = async () => {\n    if (!newItemName.trim() || !selectedListId) return;\n    try {\n      const updatedList = await addItemToList(selectedListId, newItemName);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: updatedList.items\n      } : list));\n      setNewItemName('');\n    } catch (err) {\n      console.error('Failed to add item:', err);\n    }\n  };\n  const handleToggleItemStatus = async itemId => {\n    if (!selectedListId) return;\n    try {\n      const updatedItem = await toggleItemStatus(selectedListId, itemId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: list.items.map(item => item._id === itemId ? {\n          ...item,\n          resolved: updatedItem.item.resolved\n        } : item)\n      } : list));\n    } catch (err) {\n      console.error('Failed to toggle item status:', err);\n    }\n  };\n  const handleDeleteItem = async itemId => {\n    if (!selectedListId) return;\n    console.log('Deleting item with ID:', itemId, 'from list ID:', selectedListId);\n    try {\n      await deleteItem(selectedListId, itemId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: list.items.filter(item => item._id !== itemId)\n      } : list));\n    } catch (err) {\n      console.error('Failed to delete item:', err);\n    }\n  };\n  const handleSelectList = listId => {\n    const list = shoppingLists.find(list => list._id === listId);\n    if (list) {\n      setSelectedListId(listId);\n    } else {\n      console.error('No list found with ID:', listId);\n    }\n  };\n  const getChartData = () => {\n    const selectedList = shoppingLists.find(list => list._id === selectedListId);\n    if (!selectedList) return [];\n    const totalItems = selectedList.items.length;\n    const resolvedItems = selectedList.items.filter(item => item.resolved).length;\n    return [{\n      name: 'Resolved',\n      value: resolvedItems\n    }, {\n      name: 'Unresolved',\n      value: totalItems - resolvedItems\n    }];\n  };\n  const selectedList = shoppingLists.find(list => list._id === selectedListId);\n  const t = translations[language]; // Translation function\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: authMode === 'login' ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), authError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: authError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), authMode === 'register' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAuthSubmit,\n        children: authMode === 'login' ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: authMode === 'login' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setAuthMode('register'),\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setAuthMode('login'),\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : 'light-mode'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-icon-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-icon\",\n        onClick: () => setMenuOpen(!menuOpen),\n        children: \"\\u2699\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: t.logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDarkMode,\n          children: darkMode ? t.lightMode : t.darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: t.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => switchLanguage('en'),\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => switchLanguage('ru'),\n            children: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t.shoppingList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t.shoppingList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: t.newListName,\n          value: newListName,\n          onChange: e => setNewListName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewList,\n          children: t.addNewList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lists-container\",\n          children: shoppingLists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${list._id === selectedListId ? 'selected' : ''}`,\n            onClick: () => !list.archived && handleSelectList(list._id),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), list.archived ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                handleUnarchiveList(list._id);\n              },\n              children: t.unarchive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                handleArchiveList(list._id);\n              },\n              children: t.archive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteList(list._id);\n              },\n              children: t.delete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this)]\n          }, list._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), selectedList && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: t.participants\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: t.addParticipant,\n            value: newParticipantEmail,\n            onChange: e => setNewParticipantEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddParticipant,\n            children: t.addParticipant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (selectedList.participants || []).map(participant => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: participant.email\n            }, participant._id || participant.email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: selectedList ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedList.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [t.resolved, \"/\", t.unresolved]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: (selectedList.items || []).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    textDecoration: item.resolved ? 'line-through' : 'none'\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleToggleItemStatus(item._id),\n                  children: item.resolved ? t.undone : t.done\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteItem(item._id),\n                  children: t.delete\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 23\n                }, this)]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n            width: 300,\n            height: 300,\n            children: [/*#__PURE__*/_jsxDEV(Pie, {\n              data: getChartData(),\n              dataKey: \"value\",\n              cx: \"50%\",\n              cy: \"50%\",\n              outerRadius: 100,\n              children: getChartData().map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                fill: COLORS[index % COLORS.length]\n              }, `cell-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t.selectList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qCC1mcEKMiR0IKBzPBxDO15E7I4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","Legend","registerUser","loginUser","fetchShoppingLists","createShoppingList","deleteShoppingList","archiveShoppingList","unarchiveShoppingList","addParticipantByEmail","addItemToList","toggleItemStatus","deleteItem","jsxDEV","_jsxDEV","App","_s","shoppingLists","setShoppingLists","newListName","setNewListName","newParticipantEmail","setNewParticipantEmail","newItemName","setNewItemName","selectedListId","setSelectedListId","isAuthenticated","setIsAuthenticated","localStorage","getItem","authMode","setAuthMode","email","setEmail","password","setPassword","username","setUsername","authError","setAuthError","menuOpen","setMenuOpen","darkMode","setDarkMode","language","setLanguage","COLORS","translations","en","shoppingList","addNewList","participants","addParticipant","logout","lightMode","done","undone","delete","resolved","unresolved","archived","unarchive","archive","ru","then","lists","catch","err","console","error","handleAuthSubmit","response","setItem","token","_err$response","_err$response$data","data","message","handleLogout","removeItem","toggleDarkMode","document","body","className","switchLanguage","lang","handleAddNewList","trim","newList","_id","handleDeleteList","listId","prevLists","filter","list","handleArchiveList","updatedList","map","handleUnarchiveList","handleAddParticipant","handleAddItem","items","handleToggleItemStatus","itemId","updatedItem","item","handleDeleteItem","log","handleSelectList","find","getChartData","selectedList","totalItems","length","resolvedItems","name","value","t","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","stopPropagation","participant","style","textDecoration","width","height","dataKey","cx","cy","outerRadius","entry","index","fill","selectList","_c","$RefreshReg$"],"sources":["C:/Users/ab214/OneDrive/Рабочий стол/shopppinglist/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport './App.css';\nimport {\n  registerUser,\n  loginUser,\n  fetchShoppingLists,\n  createShoppingList,\n  deleteShoppingList,\n  archiveShoppingList,\n  unarchiveShoppingList,\n  addParticipantByEmail,\n  addItemToList,\n  toggleItemStatus,\n  deleteItem,\n} from './services/apiService';\n\nconst App = () => {\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [newParticipantEmail, setNewParticipantEmail] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [authMode, setAuthMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('en');\n  const COLORS = ['#0088FE', '#FF8042'];\n\n  const translations = {\n    en: {\n      shoppingList: 'Shopping List',\n      newListName: 'New list name',\n      addNewList: 'Add New List',\n      participants: 'Participants',\n      addParticipant: 'Add Participant',\n      logout: 'Logout',\n      darkMode: 'Dark Mode',\n      lightMode: 'Light Mode',\n      language: 'Language',\n      done: 'Done',\n      undone: 'Undone',\n      delete: 'Delete',\n      resolved: 'Resolved',\n      unresolved: 'Unresolved',\n      archived: 'Archived',\n      unarchive: 'Unarchive',\n      archive: 'Archive',\n    },\n    ru: {\n      shoppingList: 'Список покупок',\n      newListName: 'Новое имя списка',\n      addNewList: 'Добавить список',\n      participants: 'Участники',\n      addParticipant: 'Добавить участника',\n      logout: 'Выйти',\n      darkMode: 'Темная тема',\n      lightMode: 'Светлая тема',\n      language: 'Язык',\n      done: 'Готово',\n      undone: 'Отменить',\n      delete: 'Удалить',\n      resolved: 'Выполнено',\n      unresolved: 'Невыполнено',\n      archived: 'Архивировано',\n      unarchive: 'Разархивировать',\n      archive: 'Архивировать',\n    },\n    // Add other languages here (e.g., Czech, Ukrainian)\n  };\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchShoppingLists()\n        .then((lists) => setShoppingLists(lists))\n        .catch((err) => console.error('Error fetching shopping lists:', err));\n    }\n  }, [isAuthenticated]);\n\n  const handleAuthSubmit = async () => {\n    try {\n      setAuthError('');\n      if (authMode === 'register') {\n        await registerUser({ email, password, username });\n        setAuthMode('login');\n      } else {\n        const response = await loginUser({ email, password });\n        localStorage.setItem('token', response.token);\n        setIsAuthenticated(true);\n      }\n    } catch (err) {\n      setAuthError(err.response?.data?.message || 'Authentication failed');\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setEmail('');\n    setPassword('');\n    setMenuOpen(false); // Close menu on logout\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.className = darkMode ? 'light-mode' : 'dark-mode';\n  };\n\n  const switchLanguage = (lang) => {\n    setLanguage(lang);\n  };\n\n  const handleAddNewList = async () => {\n    if (!newListName.trim()) {\n      console.error('List name is empty');\n      return;\n    }\n\n    try {\n      const newList = await createShoppingList(newListName);\n      setShoppingLists([...shoppingLists, newList]);\n      setNewListName('');\n      setSelectedListId(newList._id);\n    } catch (err) {\n      console.error('Failed to add new list:', err);\n    }\n  };\n\n  const handleDeleteList = async (listId) => {\n    try {\n      await deleteShoppingList(listId);\n      setShoppingLists((prevLists) => prevLists.filter((list) => list._id !== listId));\n      if (listId === selectedListId) {\n        setSelectedListId(null);\n      }\n    } catch (err) {\n      console.error('Failed to delete list:', err);\n    }\n  };\n\n  const handleArchiveList = async (listId) => {\n    try {\n      const updatedList = await archiveShoppingList(listId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === listId ? { ...list, archived: true } : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to archive list:', err);\n    }\n  };\n\n  const handleUnarchiveList = async (listId) => {\n    try {\n      const updatedList = await unarchiveShoppingList(listId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === listId ? { ...list, archived: false } : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to unarchive list:', err);\n    }\n  };\n\n  const handleAddParticipant = async () => {\n    if (!newParticipantEmail.trim() || !selectedListId) {\n      console.error('No email or list selected');\n      return;\n    }\n\n    try {\n      const updatedList = await addParticipantByEmail(selectedListId, newParticipantEmail);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId ? { ...list, participants: updatedList.participants } : list\n        )\n      );\n      setNewParticipantEmail('');\n    } catch (err) {\n      console.error('Failed to add participant:', err);\n    }\n  };\n\n  const handleAddItem = async () => {\n    if (!newItemName.trim() || !selectedListId) return;\n    try {\n      const updatedList = await addItemToList(selectedListId, newItemName);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId ? { ...list, items: updatedList.items } : list\n        )\n      );\n      setNewItemName('');\n    } catch (err) {\n      console.error('Failed to add item:', err);\n    }\n  };\n\n  const handleToggleItemStatus = async (itemId) => {\n    if (!selectedListId) return;\n\n    try {\n      const updatedItem = await toggleItemStatus(selectedListId, itemId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId\n            ? {\n                ...list,\n                items: list.items.map((item) =>\n                  item._id === itemId ? { ...item, resolved: updatedItem.item.resolved } : item\n                ),\n              }\n            : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to toggle item status:', err);\n    }\n  };\n\n  const handleDeleteItem = async (itemId) => {\n    if (!selectedListId) return;\n\n    console.log('Deleting item with ID:', itemId, 'from list ID:', selectedListId);\n\n    try {\n      await deleteItem(selectedListId, itemId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId\n            ? { ...list, items: list.items.filter((item) => item._id !== itemId) }\n            : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to delete item:', err);\n    }\n  };\n\n  const handleSelectList = (listId) => {\n    const list = shoppingLists.find((list) => list._id === listId);\n    if (list) {\n      setSelectedListId(listId);\n    } else {\n      console.error('No list found with ID:', listId);\n    }\n  };\n\n  const getChartData = () => {\n    const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n    if (!selectedList) return [];\n    const totalItems = selectedList.items.length;\n    const resolvedItems = selectedList.items.filter((item) => item.resolved).length;\n    return [\n      { name: 'Resolved', value: resolvedItems },\n      { name: 'Unresolved', value: totalItems - resolvedItems },\n    ];\n  };\n\n  const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n\n  const t = translations[language]; // Translation function\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"auth-container\">\n        <h1>{authMode === 'login' ? 'Login' : 'Register'}</h1>\n        {authError && <p className=\"error\">{authError}</p>}\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        {authMode === 'register' && (\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        )}\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button onClick={handleAuthSubmit}>\n          {authMode === 'login' ? 'Login' : 'Register'}\n        </button>\n        <p>\n          {authMode === 'login' ? (\n            <span onClick={() => setAuthMode('register')}>Create an account</span>\n          ) : (\n            <span onClick={() => setAuthMode('login')}>Already have an account?</span>\n          )}\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : 'light-mode'}`}>\n      <div className=\"settings-icon-container\">\n        <div className=\"settings-icon\" onClick={() => setMenuOpen(!menuOpen)}>\n          ⚙️\n        </div>\n        {menuOpen && (\n          <div className=\"settings-menu\">\n            <button onClick={handleLogout}>{t.logout}</button>\n            <button onClick={toggleDarkMode}>\n              {darkMode ? t.lightMode : t.darkMode}\n            </button>\n            <div>\n              <h4>{t.language}</h4>\n              <button onClick={() => switchLanguage('en')}>English</button>\n              <button onClick={() => switchLanguage('ru')}>Русский</button>\n              {/* Add other languages as needed */}\n            </div>\n          </div>\n        )}\n      </div>\n      <h1>{t.shoppingList}</h1>\n      <div className=\"container\">\n        <div className=\"sidebar\">\n          <h2>{t.shoppingList}</h2>\n          <input\n            type=\"text\"\n            placeholder={t.newListName}\n            value={newListName}\n            onChange={(e) => setNewListName(e.target.value)}\n          />\n          <button onClick={handleAddNewList}>{t.addNewList}</button>\n          <div className=\"lists-container\">\n            {shoppingLists.map((list) => (\n              <div\n                key={list._id}\n                className={`list-item ${list._id === selectedListId ? 'selected' : ''}`}\n                onClick={() => !list.archived && handleSelectList(list._id)}\n              >\n                <span>{list.name}</span>\n                {list.archived ? (\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleUnarchiveList(list._id);\n                    }}\n                  >\n                    {t.unarchive}\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleArchiveList(list._id);\n                    }}\n                  >\n                    {t.archive}\n                  </button>\n                )}\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleDeleteList(list._id);\n                  }}\n                >\n                  {t.delete}\n                </button>\n              </div>\n            ))}\n          </div>\n          {selectedList && (\n            <div>\n              <h3>{t.participants}</h3>\n              <input\n                type=\"text\"\n                placeholder={t.addParticipant}\n                value={newParticipantEmail}\n                onChange={(e) => setNewParticipantEmail(e.target.value)}\n              />\n              <button onClick={handleAddParticipant}>{t.addParticipant}</button>\n              <ul>\n                {(selectedList.participants || []).map((participant) => (\n                  <li key={participant._id || participant.email}>{participant.email}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        <div className=\"main-content\">\n          {selectedList ? (\n            <div>\n              <h2>{selectedList.name}</h2>\n              <div>\n                <h3>{t.resolved}/{t.unresolved}</h3>\n                <ul>\n                  {(selectedList.items || []).map((item) => (\n                    <li key={item._id}>\n                      <span\n                        style={{\n                          textDecoration: item.resolved ? 'line-through' : 'none',\n                        }}\n                      >\n                        {item.name}\n                      </span>\n                      <button onClick={() => handleToggleItemStatus(item._id)}>\n                        {item.resolved ? t.undone : t.done}\n                      </button>\n                      <button onClick={() => handleDeleteItem(item._id)}>{t.delete}</button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <PieChart width={300} height={300}>\n                <Pie\n                  data={getChartData()}\n                  dataKey=\"value\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={100}\n                >\n                  {getChartData().map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Legend />\n              </PieChart>\n            </div>\n          ) : (\n            <p>{t.selectList}</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}