{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ab214\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\shopppinglist\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport './App.css';\nimport { registerUser, loginUser, fetchShoppingLists, createShoppingList, deleteShoppingList, archiveShoppingList, unarchiveShoppingList, addParticipantByEmail, addItemToList, toggleItemStatus, deleteItem } from './services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [newParticipantEmail, setNewParticipantEmail] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [authMode, setAuthMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('en');\n  const COLORS = darkMode ? ['#4CAF50', '#F44336'] : ['#0088FE', '#FF8042'];\n  const translations = {\n    en: {\n      shoppingList: 'Shopping List',\n      addParticipant: 'Add Participant',\n      newListName: 'New List Name',\n      addNewList: 'Add New List',\n      participantEmail: 'Participant Email',\n      logout: 'Logout',\n      language: 'Language',\n      lightMode: 'Light Mode',\n      darkMode: 'Dark Mode',\n      archive: 'Archive',\n      unarchive: 'Unarchive',\n      delete: 'Delete',\n      addItem: 'Add Item',\n      newItem: 'New Item',\n      items: 'Items',\n      done: 'Done',\n      undone: 'Undone',\n      overview: 'Overview',\n      selectList: 'Select a list to view details',\n      ownerOnly: 'Only the owner can archive or unarchive the list',\n      archivedList: 'This list is archived. Changes are not allowed.'\n    },\n    ru: {\n      shoppingList: 'Список покупок',\n      addParticipant: 'Добавить участника',\n      newListName: 'Название нового списка',\n      addNewList: 'Добавить новый список',\n      participantEmail: 'Email участника',\n      logout: 'Выйти',\n      language: 'Язык',\n      lightMode: 'Светлая тема',\n      darkMode: 'Темная тема',\n      archive: 'Архивировать',\n      unarchive: 'Разархивировать',\n      delete: 'Удалить',\n      addItem: 'Добавить элемент',\n      newItem: 'Новый элемент',\n      items: 'Элементы',\n      done: 'Готово',\n      undone: 'Не готово',\n      overview: 'Обзор',\n      selectList: 'Выберите список для просмотра деталей',\n      ownerOnly: 'Только владелец может архивировать или разархивировать список',\n      archivedList: 'Этот список заархивирован. Изменения невозможны.'\n    }\n  };\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchShoppingLists().then(lists => setShoppingLists(lists)).catch(err => console.error('Error fetching shopping lists:', err));\n    }\n  }, [isAuthenticated]);\n  const handleAuthSubmit = async () => {\n    try {\n      setAuthError('');\n      if (!email || !password) {\n        setAuthError('Please fill in all fields');\n        return;\n      }\n      const data = authMode === 'register' ? await registerUser({\n        email,\n        password\n      }) : await loginUser({\n        email,\n        password\n      });\n      localStorage.setItem('token', data.token);\n      setIsAuthenticated(true);\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error('Authentication error:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setAuthError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Authentication failed');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setEmail('');\n    setPassword('');\n    setMenuOpen(false);\n  };\n  const handleAddNewList = async () => {\n    if (!newListName.trim()) {\n      console.error('List name is empty');\n      return;\n    }\n    try {\n      const newList = await createShoppingList(newListName);\n      setShoppingLists([...shoppingLists, newList]);\n      setNewListName('');\n      setSelectedListId(newList._id);\n    } catch (err) {\n      console.error('Failed to add new list:', err);\n    }\n  };\n  const saveListNameToBackend = async listId => {\n    // Найти выбранный список\n    const list = shoppingLists.find(list => list._id === listId);\n\n    // Проверка на существование списка и пустое имя\n    if (!list || !list.name.trim()) {\n      alert('List name cannot be empty');\n      return;\n    }\n    try {\n      // Логируем URL для отладки\n      const BASE_URL = 'http://localhost:5000/api/shopping-lists'; // Замените на ваш URL\n      console.log(`PUT request to: ${BASE_URL}/${listId}`);\n\n      // Выполняем PUT-запрос на сервер\n      const response = await fetch(`${BASE_URL}/${listId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}` // Добавляем токен\n        },\n        body: JSON.stringify({\n          name: list.name\n        }) // Отправляем новое имя списка\n      });\n\n      // Проверяем успешность запроса\n      if (!response.ok) {\n        const errorData = await response.json(); // Попробуем получить JSON ошибки\n        console.error('Error response from server:', errorData);\n        throw new Error(errorData.message || 'Failed to update list name');\n      }\n\n      // Получаем обновленный список из ответа\n      const updatedList = await response.json();\n      console.log('Updated list from server:', updatedList);\n\n      // Обновляем состояние с новым именем списка\n      setShoppingLists(prevLists => prevLists.map(list => list._id === updatedList._id ? {\n        ...list,\n        name: updatedList.name\n      } : list));\n      alert('List name successfully updated'); // Уведомление об успешном обновлении\n    } catch (err) {\n      // Обработка ошибок\n      console.error('Failed to save list name:', err.message);\n      alert('Error saving list name: ' + err.message);\n    }\n  };\n  const handleDeleteList = async listId => {\n    try {\n      await deleteShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.filter(list => list._id !== listId));\n      if (listId === selectedListId) {\n        setSelectedListId(null);\n      }\n    } catch (err) {\n      console.error('Failed to delete list:', err);\n    }\n  };\n  const handleArchiveList = async listId => {\n    const selectedList = shoppingLists.find(list => list._id === listId);\n    if (!selectedList.owner) {\n      alert(t.ownerOnly);\n      return;\n    }\n    try {\n      await archiveShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === listId ? {\n        ...list,\n        archived: true\n      } : list));\n    } catch (err) {\n      console.error('Failed to archive list:', err);\n    }\n  };\n  const handleUnarchiveList = async listId => {\n    const selectedList = shoppingLists.find(list => list._id === listId);\n    if (!selectedList.owner) {\n      alert(t.ownerOnly);\n      return;\n    }\n    try {\n      await unarchiveShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === listId ? {\n        ...list,\n        archived: false\n      } : list));\n    } catch (err) {\n      console.error('Failed to unarchive list:', err);\n    }\n  };\n  const handleAddParticipant = async () => {\n    if (!newParticipantEmail.trim() || !selectedListId) {\n      console.error('No email or list selected');\n      return;\n    }\n    try {\n      const updatedList = await addParticipantByEmail(selectedListId, newParticipantEmail);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        participants: updatedList.participants\n      } : list));\n      setNewParticipantEmail('');\n    } catch (err) {\n      console.error('Failed to add participant:', err);\n    }\n  };\n  const handleAddItem = async () => {\n    if (!newItemName.trim() || !selectedListId) return;\n    const selectedList = shoppingLists.find(list => list._id === selectedListId);\n    if (selectedList.archived) {\n      alert(t.archivedList);\n      return;\n    }\n    try {\n      const updatedList = await addItemToList(selectedListId, newItemName);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: updatedList.items\n      } : list));\n      setNewItemName('');\n    } catch (err) {\n      console.error('Failed to add item:', err);\n    }\n  };\n  const handleToggleItemStatus = async itemId => {\n    const selectedList = shoppingLists.find(list => list._id === selectedListId);\n    if (selectedList.archived) {\n      alert(t.archivedList);\n      return;\n    }\n    try {\n      const updatedItem = await toggleItemStatus(selectedListId, itemId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: list.items.map(item => item._id === itemId ? {\n          ...item,\n          resolved: updatedItem.item.resolved\n        } : item)\n      } : list));\n    } catch (err) {\n      console.error('Failed to toggle item status:', err);\n    }\n  };\n  const handleDeleteItem = async itemId => {\n    if (!selectedListId) return;\n    try {\n      await deleteItem(selectedListId, itemId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: list.items.filter(item => item._id !== itemId)\n      } : list));\n    } catch (err) {\n      console.error('Failed to delete item:', err);\n    }\n  };\n  const handleSelectList = listId => {\n    const list = shoppingLists.find(list => list._id === listId);\n    if (list) {\n      setSelectedListId(listId);\n    } else {\n      console.error('No list found with ID:', listId);\n    }\n  };\n  const getChartData = () => {\n    const selectedList = shoppingLists.find(list => list._id === selectedListId);\n    if (!selectedList) return [];\n    const totalItems = selectedList.items.length;\n    const resolvedItems = selectedList.items.filter(item => item.resolved).length;\n    return [{\n      name: t.done,\n      value: resolvedItems\n    }, {\n      name: t.undone,\n      value: totalItems - resolvedItems\n    }];\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.className = darkMode ? 'light-mode' : 'dark-mode';\n  };\n  const switchLanguage = lang => {\n    setLanguage(lang);\n  };\n  const t = translations[language];\n  const selectedList = shoppingLists.find(list => list._id === selectedListId);\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: authMode === 'login' ? 'Log in' : 'Sign up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), authError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: authError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAuthSubmit,\n        children: authMode === 'login' ? 'Log in' : 'Sign up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: authMode === 'login' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setAuthMode('register'),\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setAuthMode('login'),\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : 'light-mode'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-icon-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-icon\",\n        onClick: () => setMenuOpen(!menuOpen),\n        children: \"\\u2699\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: t.logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDarkMode,\n          children: darkMode ? t.lightMode : t.darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: t.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => switchLanguage('en'),\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => switchLanguage('ru'),\n            children: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t.shoppingList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t.shoppingList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: t.newListName,\n          value: newListName,\n          onChange: e => setNewListName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewList,\n          children: t.addNewList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lists-container\",\n          children: shoppingLists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${list._id === selectedListId ? 'selected' : ''}`,\n            onClick: () => handleSelectList(list._id),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-name-display\",\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), list.archived ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"unarchive-button\",\n              onClick: e => {\n                e.stopPropagation();\n                handleUnarchiveList(list._id);\n              },\n              children: t.unarchive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"archive-button\",\n              onClick: e => {\n                e.stopPropagation();\n                handleArchiveList(list._id);\n              },\n              children: t.archive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteList(list._id);\n              },\n              children: t.delete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, list._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), selectedList && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: t.participants\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: t.participantEmail,\n            value: newParticipantEmail,\n            onChange: e => setNewParticipantEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddParticipant,\n            children: t.addParticipant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (selectedList.participants || []).map(participant => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: participant.email\n            }, participant._id || participant.email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: selectedList ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit List Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedList.name || '' // Добавляем защиту от undefined\n            ,\n            onChange: e => {\n              // Обновляем состояние для мгновенного эффекта в UI\n              setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n                ...list,\n                name: e.target.value\n              } : list));\n            },\n            onBlur: () => {\n              // Вызываем сохранение на сервере\n              const currentName = selectedList.name.trim(); // Убираем пробелы\n              if (currentName) {\n                saveListNameToBackend(selectedListId);\n              } else {\n                alert('List name cannot be empty'); // Уведомляем пользователя, если имя пустое\n              }\n            },\n            placeholder: \"Edit List Name\",\n            className: \"edit-list-name-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: t.items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: t.newItem,\n            value: newItemName,\n            onChange: e => setNewItemName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddItem,\n            children: t.addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (selectedList.items || []).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  textDecoration: item.resolved ? 'line-through' : 'none'\n                },\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleToggleItemStatus(item._id),\n                children: item.resolved ? t.undone : t.done\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteItem(item._id),\n                children: t.delete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 21\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: t.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n              width: 300,\n              height: 300,\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: getChartData(),\n                dataKey: \"value\",\n                cx: \"50%\",\n                cy: \"50%\",\n                outerRadius: 100,\n                children: getChartData().map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t.selectList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qCC1mcEKMiR0IKBzPBxDO15E7I4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","Legend","registerUser","loginUser","fetchShoppingLists","createShoppingList","deleteShoppingList","archiveShoppingList","unarchiveShoppingList","addParticipantByEmail","addItemToList","toggleItemStatus","deleteItem","jsxDEV","_jsxDEV","App","_s","shoppingLists","setShoppingLists","newListName","setNewListName","newParticipantEmail","setNewParticipantEmail","newItemName","setNewItemName","selectedListId","setSelectedListId","isAuthenticated","setIsAuthenticated","localStorage","getItem","authMode","setAuthMode","email","setEmail","password","setPassword","username","setUsername","authError","setAuthError","menuOpen","setMenuOpen","darkMode","setDarkMode","language","setLanguage","COLORS","translations","en","shoppingList","addParticipant","addNewList","participantEmail","logout","lightMode","archive","unarchive","delete","addItem","newItem","items","done","undone","overview","selectList","ownerOnly","archivedList","ru","then","lists","catch","err","console","error","handleAuthSubmit","data","setItem","token","_err$response","_err$response2","_err$response2$data","response","message","handleLogout","removeItem","handleAddNewList","trim","newList","_id","saveListNameToBackend","listId","list","find","name","alert","BASE_URL","log","fetch","method","headers","Authorization","body","JSON","stringify","ok","errorData","json","Error","updatedList","prevLists","map","handleDeleteList","filter","handleArchiveList","selectedList","owner","t","archived","handleUnarchiveList","handleAddParticipant","participants","handleAddItem","handleToggleItemStatus","itemId","updatedItem","item","resolved","handleDeleteItem","handleSelectList","getChartData","totalItems","length","resolvedItems","value","toggleDarkMode","document","className","switchLanguage","lang","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","stopPropagation","participant","onBlur","currentName","style","textDecoration","width","height","dataKey","cx","cy","outerRadius","entry","index","fill","_c","$RefreshReg$"],"sources":["C:/Users/ab214/OneDrive/Рабочий стол/shopppinglist/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport './App.css';\nimport {\n  registerUser,\n  loginUser,\n  fetchShoppingLists,\n  createShoppingList,\n  deleteShoppingList,\n  archiveShoppingList,\n  unarchiveShoppingList,\n  addParticipantByEmail,\n  addItemToList,\n  toggleItemStatus,\n  deleteItem,\n} from './services/apiService';\n\nconst App = () => {\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [newParticipantEmail, setNewParticipantEmail] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [authMode, setAuthMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('en');\n  const COLORS = darkMode ? ['#4CAF50', '#F44336'] : ['#0088FE', '#FF8042'];\n\n  const translations = {\n    en: {\n      shoppingList: 'Shopping List',\n      addParticipant: 'Add Participant',\n      newListName: 'New List Name',\n      addNewList: 'Add New List',\n      participantEmail: 'Participant Email',\n      logout: 'Logout',\n      language: 'Language',\n      lightMode: 'Light Mode',\n      darkMode: 'Dark Mode',\n      archive: 'Archive',\n      unarchive: 'Unarchive',\n      delete: 'Delete',\n      addItem: 'Add Item',\n      newItem: 'New Item',\n      items: 'Items',\n      done: 'Done',\n      undone: 'Undone',\n      overview: 'Overview',\n      selectList: 'Select a list to view details',\n      ownerOnly: 'Only the owner can archive or unarchive the list',\n      archivedList: 'This list is archived. Changes are not allowed.',\n    },\n    ru: {\n      shoppingList: 'Список покупок',\n      addParticipant: 'Добавить участника',\n      newListName: 'Название нового списка',\n      addNewList: 'Добавить новый список',\n      participantEmail: 'Email участника',\n      logout: 'Выйти',\n      language: 'Язык',\n      lightMode: 'Светлая тема',\n      darkMode: 'Темная тема',\n      archive: 'Архивировать',\n      unarchive: 'Разархивировать',\n      delete: 'Удалить',\n      addItem: 'Добавить элемент',\n      newItem: 'Новый элемент',\n      items: 'Элементы',\n      done: 'Готово',\n      undone: 'Не готово',\n      overview: 'Обзор',\n      selectList: 'Выберите список для просмотра деталей',\n      ownerOnly: 'Только владелец может архивировать или разархивировать список',\n      archivedList: 'Этот список заархивирован. Изменения невозможны.',\n    },\n  };\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchShoppingLists()\n        .then((lists) => setShoppingLists(lists))\n        .catch((err) => console.error('Error fetching shopping lists:', err));\n    }\n  }, [isAuthenticated]);\n\n  const handleAuthSubmit = async () => {\n    try {\n      setAuthError('');\n      if (!email || !password) {\n        setAuthError('Please fill in all fields');\n        return;\n      }\n      const data =\n        authMode === 'register'\n          ? await registerUser({ email, password })\n          : await loginUser({ email, password });\n  \n      localStorage.setItem('token', data.token);\n      setIsAuthenticated(true);\n    } catch (err) {\n      console.error('Authentication error:', err.response?.data || err.message);\n      setAuthError(err.response?.data?.message || 'Authentication failed');\n    }\n  };\n  \n  \n  \n  \n  \n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setEmail('');\n    setPassword('');\n    setMenuOpen(false);\n  };\n\n  const handleAddNewList = async () => {\n    if (!newListName.trim()) {\n      console.error('List name is empty');\n      return;\n    }\n\n    try {\n      const newList = await createShoppingList(newListName);\n      setShoppingLists([...shoppingLists, newList]);\n      setNewListName('');\n      setSelectedListId(newList._id);\n    } catch (err) {\n      console.error('Failed to add new list:', err);\n    }\n  };\n\n\n  const saveListNameToBackend = async (listId) => {\n    // Найти выбранный список\n    const list = shoppingLists.find((list) => list._id === listId);\n  \n    // Проверка на существование списка и пустое имя\n    if (!list || !list.name.trim()) {\n      alert('List name cannot be empty');\n      return;\n    }\n  \n    try {\n      // Логируем URL для отладки\n      const BASE_URL = 'http://localhost:5000/api/shopping-lists'; // Замените на ваш URL\n      console.log(`PUT request to: ${BASE_URL}/${listId}`);\n  \n      // Выполняем PUT-запрос на сервер\n      const response = await fetch(`${BASE_URL}/${listId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`, // Добавляем токен\n        },\n        body: JSON.stringify({ name: list.name }), // Отправляем новое имя списка\n      });\n  \n      // Проверяем успешность запроса\n      if (!response.ok) {\n        const errorData = await response.json(); // Попробуем получить JSON ошибки\n        console.error('Error response from server:', errorData);\n        throw new Error(errorData.message || 'Failed to update list name');\n      }\n  \n      // Получаем обновленный список из ответа\n      const updatedList = await response.json();\n      console.log('Updated list from server:', updatedList);\n  \n      // Обновляем состояние с новым именем списка\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === updatedList._id ? { ...list, name: updatedList.name } : list\n        )\n      );\n  \n      alert('List name successfully updated'); // Уведомление об успешном обновлении\n    } catch (err) {\n      // Обработка ошибок\n      console.error('Failed to save list name:', err.message);\n      alert('Error saving list name: ' + err.message);\n    }\n  };\n  \n  const handleDeleteList = async (listId) => {\n    try {\n      await deleteShoppingList(listId);\n      setShoppingLists((prevLists) => prevLists.filter((list) => list._id !== listId));\n      if (listId === selectedListId) {\n        setSelectedListId(null);\n      }\n    } catch (err) {\n      console.error('Failed to delete list:', err);\n    }\n  };\n\n  const handleArchiveList = async (listId) => {\n    const selectedList = shoppingLists.find((list) => list._id === listId);\n    if (!selectedList.owner) {\n      alert(t.ownerOnly);\n      return;\n    }\n\n    try {\n      await archiveShoppingList(listId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === listId ? { ...list, archived: true } : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to archive list:', err);\n    }\n  };\n\n  const handleUnarchiveList = async (listId) => {\n    const selectedList = shoppingLists.find((list) => list._id === listId);\n    if (!selectedList.owner) {\n      alert(t.ownerOnly);\n      return;\n    }\n\n    try {\n      await unarchiveShoppingList(listId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === listId ? { ...list, archived: false } : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to unarchive list:', err);\n    }\n  };\n\n  const handleAddParticipant = async () => {\n    if (!newParticipantEmail.trim() || !selectedListId) {\n      console.error('No email or list selected');\n      return;\n    }\n\n    try {\n      const updatedList = await addParticipantByEmail(selectedListId, newParticipantEmail);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId ? { ...list, participants: updatedList.participants } : list\n        )\n      );\n      setNewParticipantEmail('');\n    } catch (err) {\n      console.error('Failed to add participant:', err);\n    }\n  };\n\n  const handleAddItem = async () => {\n    if (!newItemName.trim() || !selectedListId) return;\n\n    const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n    if (selectedList.archived) {\n      alert(t.archivedList);\n      return;\n    }\n\n    try {\n      const updatedList = await addItemToList(selectedListId, newItemName);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId ? { ...list, items: updatedList.items } : list\n        )\n      );\n      setNewItemName('');\n    } catch (err) {\n      console.error('Failed to add item:', err);\n    }\n  };\n\n  const handleToggleItemStatus = async (itemId) => {\n    const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n    if (selectedList.archived) {\n      alert(t.archivedList);\n      return;\n    }\n\n    try {\n      const updatedItem = await toggleItemStatus(selectedListId, itemId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId\n            ? {\n                ...list,\n                items: list.items.map((item) =>\n                  item._id === itemId ? { ...item, resolved: updatedItem.item.resolved } : item\n                ),\n              }\n            : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to toggle item status:', err);\n    }\n  };\n\n  const handleDeleteItem = async (itemId) => {\n    if (!selectedListId) return;\n\n    try {\n      await deleteItem(selectedListId, itemId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId\n            ? { ...list, items: list.items.filter((item) => item._id !== itemId) }\n            : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to delete item:', err);\n    }\n  };\n\n  const handleSelectList = (listId) => {\n    const list = shoppingLists.find((list) => list._id === listId);\n    if (list) {\n      setSelectedListId(listId);\n    } else {\n      console.error('No list found with ID:', listId);\n    }\n  };\n\n  const getChartData = () => {\n    const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n    if (!selectedList) return [];\n    const totalItems = selectedList.items.length;\n    const resolvedItems = selectedList.items.filter((item) => item.resolved).length;\n    return [\n      { name: t.done, value: resolvedItems },\n      { name: t.undone, value: totalItems - resolvedItems },\n    ];\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.className = darkMode ? 'light-mode' : 'dark-mode';\n  };\n\n  const switchLanguage = (lang) => {\n    setLanguage(lang);\n  };\n\n  const t = translations[language];\n\n  const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n  if (!isAuthenticated) {\n    return (\n      <div className=\"auth-container\">\n        <h1>{authMode === 'login' ? 'Log in' : 'Sign up'}</h1>\n        {authError && <p className=\"error\">{authError}</p>}\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button onClick={handleAuthSubmit}>\n          {authMode === 'login' ? 'Log in' : 'Sign up'}\n        </button>\n        <p>\n          {authMode === 'login' ? (\n            <span onClick={() => setAuthMode('register')}>Create an account</span>\n          ) : (\n            <span onClick={() => setAuthMode('login')}>Already have an account?</span>\n          )}\n        </p>\n      </div>\n    );\n  }  \n  \n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : 'light-mode'}`}>\n      <div className=\"settings-icon-container\">\n        <div className=\"settings-icon\" onClick={() => setMenuOpen(!menuOpen)}>\n          ⚙️\n        </div>\n        {menuOpen && (\n          <div className=\"settings-menu\">\n            <button onClick={handleLogout}>{t.logout}</button>\n            <button onClick={toggleDarkMode}>\n              {darkMode ? t.lightMode : t.darkMode}\n            </button>\n            <div>\n              <h4>{t.language}</h4>\n              <button onClick={() => switchLanguage('en')}>English</button>\n              <button onClick={() => switchLanguage('ru')}>Русский</button>\n            </div>\n          </div>\n        )}\n      </div>\n      <h1>{t.shoppingList}</h1>\n      <div className=\"container\">\n        <div className=\"sidebar\">\n          <h2>{t.shoppingList}</h2>\n          <input\n            type=\"text\"\n            placeholder={t.newListName}\n            value={newListName}\n            onChange={(e) => setNewListName(e.target.value)}\n          />\n          <button onClick={handleAddNewList}>{t.addNewList}</button>\n          <div className=\"lists-container\">\n            {shoppingLists.map((list) => (\n              <div\n                key={list._id}\n                className={`list-item ${list._id === selectedListId ? 'selected' : ''}`}\n                onClick={() => handleSelectList(list._id)}\n              >\n                <span className=\"list-name-display\">{list.name}</span>\n                {list.archived ? (\n                  <button\n                    className=\"unarchive-button\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleUnarchiveList(list._id);\n                    }}\n                  >\n                    {t.unarchive}\n                  </button>\n                ) : (\n                  <button\n                    className=\"archive-button\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleArchiveList(list._id);\n                    }}\n                  >\n                    {t.archive}\n                  </button>\n                )}\n                <button\n                  className=\"delete-button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleDeleteList(list._id);\n                  }}\n                >\n                  {t.delete}\n                </button>\n              </div>\n            ))}\n          </div>\n          {selectedList && (\n            <div>\n              <h3>{t.participants}</h3>\n              <input\n                type=\"text\"\n                placeholder={t.participantEmail}\n                value={newParticipantEmail}\n                onChange={(e) => setNewParticipantEmail(e.target.value)}\n              />\n              <button onClick={handleAddParticipant}>{t.addParticipant}</button>\n              <ul>\n                {(selectedList.participants || []).map((participant) => (\n                  <li key={participant._id || participant.email}>{participant.email}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        <div className=\"main-content\">\n  {selectedList ? (\n    <div>\n      <h2>Edit List Name</h2>\n      <input\n        type=\"text\"\n        value={selectedList.name || ''} // Добавляем защиту от undefined\n        onChange={(e) => {\n          // Обновляем состояние для мгновенного эффекта в UI\n          setShoppingLists((prevLists) =>\n            prevLists.map((list) =>\n              list._id === selectedListId\n                ? { ...list, name: e.target.value }\n                : list\n            )\n          );\n        }}\n        onBlur={() => {\n          // Вызываем сохранение на сервере\n          const currentName = selectedList.name.trim(); // Убираем пробелы\n          if (currentName) {\n            saveListNameToBackend(selectedListId);\n          } else {\n            alert('List name cannot be empty'); // Уведомляем пользователя, если имя пустое\n          }\n        }}\n        placeholder=\"Edit List Name\"\n        className=\"edit-list-name-input\"\n      />\n              <h3>{t.items}</h3>\n              <input\n                type=\"text\"\n                placeholder={t.newItem}\n                value={newItemName}\n                onChange={(e) => setNewItemName(e.target.value)}\n              />\n              <button onClick={handleAddItem}>{t.addItem}</button>\n              <ul>\n                {(selectedList.items || []).map((item) => (\n                  <li key={item._id}>\n                    <span\n                      style={{\n                        textDecoration: item.resolved ? 'line-through' : 'none',\n                      }}\n                    >\n                      {item.name}\n                    </span>\n                    <button onClick={() => handleToggleItemStatus(item._id)}>\n                      {item.resolved ? t.undone : t.done}\n                    </button>\n                    <button onClick={() => handleDeleteItem(item._id)}>{t.delete}</button>\n                  </li>\n                ))}\n              </ul>\n              <div>\n                <h3>{t.overview}</h3>\n                <PieChart width={300} height={300}>\n                  <Pie\n                    data={getChartData()}\n                    dataKey=\"value\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={100}\n                  >\n                    {getChartData().map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Legend />\n                </PieChart>\n              </div>\n            </div>\n          ) : (\n            <p>{t.selectList}</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n  \n};\n\nexport default App;\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,QAAQ,UAAU;AACtD,OAAO,WAAW;AAClB,SACEC,YAAY,EACZC,SAAS,EACTC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,EAClBC,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,EACrBC,aAAa,EACbC,gBAAgB,EAChBC,UAAU,QACL,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC+B,eAAe,EAAEC,kBAAkB,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAACiC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuC,QAAQ,EAAEC,WAAW,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2C,SAAS,EAAEC,YAAY,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC6C,QAAQ,EAAEC,WAAW,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC+C,QAAQ,EAAEC,WAAW,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiD,QAAQ,EAAEC,WAAW,CAAC,GAAGlD,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMmD,MAAM,GAAGJ,QAAQ,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;EAEzE,MAAMK,YAAY,GAAG;IACnBC,EAAE,EAAE;MACFC,YAAY,EAAE,eAAe;MAC7BC,cAAc,EAAE,iBAAiB;MACjChC,WAAW,EAAE,eAAe;MAC5BiC,UAAU,EAAE,cAAc;MAC1BC,gBAAgB,EAAE,mBAAmB;MACrCC,MAAM,EAAE,QAAQ;MAChBT,QAAQ,EAAE,UAAU;MACpBU,SAAS,EAAE,YAAY;MACvBZ,QAAQ,EAAE,WAAW;MACrBa,OAAO,EAAE,SAAS;MAClBC,SAAS,EAAE,WAAW;MACtBC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,UAAU;MACnBC,OAAO,EAAE,UAAU;MACnBC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAE,UAAU;MACpBC,UAAU,EAAE,+BAA+B;MAC3CC,SAAS,EAAE,kDAAkD;MAC7DC,YAAY,EAAE;IAChB,CAAC;IACDC,EAAE,EAAE;MACFlB,YAAY,EAAE,gBAAgB;MAC9BC,cAAc,EAAE,oBAAoB;MACpChC,WAAW,EAAE,wBAAwB;MACrCiC,UAAU,EAAE,uBAAuB;MACnCC,gBAAgB,EAAE,iBAAiB;MACnCC,MAAM,EAAE,OAAO;MACfT,QAAQ,EAAE,MAAM;MAChBU,SAAS,EAAE,cAAc;MACzBZ,QAAQ,EAAE,aAAa;MACvBa,OAAO,EAAE,cAAc;MACvBC,SAAS,EAAE,iBAAiB;MAC5BC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,kBAAkB;MAC3BC,OAAO,EAAE,eAAe;MACxBC,KAAK,EAAE,UAAU;MACjBC,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE,WAAW;MACnBC,QAAQ,EAAE,OAAO;MACjBC,UAAU,EAAE,uCAAuC;MACnDC,SAAS,EAAE,+DAA+D;MAC1EC,YAAY,EAAE;IAChB;EACF,CAAC;EAEDtE,SAAS,CAAC,MAAM;IACd,IAAI8B,eAAe,EAAE;MACnBvB,kBAAkB,CAAC,CAAC,CACjBiE,IAAI,CAAEC,KAAK,IAAKpD,gBAAgB,CAACoD,KAAK,CAAC,CAAC,CACxCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC,CAAC;IACzE;EACF,CAAC,EAAE,CAAC7C,eAAe,CAAC,CAAC;EAErB,MAAMgD,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFnC,YAAY,CAAC,EAAE,CAAC;MAChB,IAAI,CAACP,KAAK,IAAI,CAACE,QAAQ,EAAE;QACvBK,YAAY,CAAC,2BAA2B,CAAC;QACzC;MACF;MACA,MAAMoC,IAAI,GACR7C,QAAQ,KAAK,UAAU,GACnB,MAAM7B,YAAY,CAAC;QAAE+B,KAAK;QAAEE;MAAS,CAAC,CAAC,GACvC,MAAMhC,SAAS,CAAC;QAAE8B,KAAK;QAAEE;MAAS,CAAC,CAAC;MAE1CN,YAAY,CAACgD,OAAO,CAAC,OAAO,EAAED,IAAI,CAACE,KAAK,CAAC;MACzClD,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAO4C,GAAG,EAAE;MAAA,IAAAO,aAAA,EAAAC,cAAA,EAAAC,mBAAA;MACZR,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAE,EAAAK,aAAA,GAAAP,GAAG,CAACU,QAAQ,cAAAH,aAAA,uBAAZA,aAAA,CAAcH,IAAI,KAAIJ,GAAG,CAACW,OAAO,CAAC;MACzE3C,YAAY,CAAC,EAAAwC,cAAA,GAAAR,GAAG,CAACU,QAAQ,cAAAF,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcJ,IAAI,cAAAK,mBAAA,uBAAlBA,mBAAA,CAAoBE,OAAO,KAAI,uBAAuB,CAAC;IACtE;EACF,CAAC;EAOD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBvD,YAAY,CAACwD,UAAU,CAAC,OAAO,CAAC;IAChCzD,kBAAkB,CAAC,KAAK,CAAC;IACzBM,QAAQ,CAAC,EAAE,CAAC;IACZE,WAAW,CAAC,EAAE,CAAC;IACfM,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAM4C,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACnE,WAAW,CAACoE,IAAI,CAAC,CAAC,EAAE;MACvBd,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACnC;IACF;IAEA,IAAI;MACF,MAAMc,OAAO,GAAG,MAAMnF,kBAAkB,CAACc,WAAW,CAAC;MACrDD,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEuE,OAAO,CAAC,CAAC;MAC7CpE,cAAc,CAAC,EAAE,CAAC;MAClBM,iBAAiB,CAAC8D,OAAO,CAACC,GAAG,CAAC;IAChC,CAAC,CAAC,OAAOjB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC/C;EACF,CAAC;EAGD,MAAMkB,qBAAqB,GAAG,MAAOC,MAAM,IAAK;IAC9C;IACA,MAAMC,IAAI,GAAG3E,aAAa,CAAC4E,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACH,GAAG,KAAKE,MAAM,CAAC;;IAE9D;IACA,IAAI,CAACC,IAAI,IAAI,CAACA,IAAI,CAACE,IAAI,CAACP,IAAI,CAAC,CAAC,EAAE;MAC9BQ,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IAEA,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,0CAA0C,CAAC,CAAC;MAC7DvB,OAAO,CAACwB,GAAG,CAAC,mBAAmBD,QAAQ,IAAIL,MAAM,EAAE,CAAC;;MAEpD;MACA,MAAMT,QAAQ,GAAG,MAAMgB,KAAK,CAAC,GAAGF,QAAQ,IAAIL,MAAM,EAAE,EAAE;QACpDQ,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUxE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAE;QAC5D,CAAC;QACDwE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,IAAI,EAAEF,IAAI,CAACE;QAAK,CAAC,CAAC,CAAE;MAC7C,CAAC,CAAC;;MAEF;MACA,IAAI,CAACZ,QAAQ,CAACuB,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMxB,QAAQ,CAACyB,IAAI,CAAC,CAAC,CAAC,CAAC;QACzClC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEgC,SAAS,CAAC;QACvD,MAAM,IAAIE,KAAK,CAACF,SAAS,CAACvB,OAAO,IAAI,4BAA4B,CAAC;MACpE;;MAEA;MACA,MAAM0B,WAAW,GAAG,MAAM3B,QAAQ,CAACyB,IAAI,CAAC,CAAC;MACzClC,OAAO,CAACwB,GAAG,CAAC,2BAA2B,EAAEY,WAAW,CAAC;;MAErD;MACA3F,gBAAgB,CAAE4F,SAAS,IACzBA,SAAS,CAACC,GAAG,CAAEnB,IAAI,IACjBA,IAAI,CAACH,GAAG,KAAKoB,WAAW,CAACpB,GAAG,GAAG;QAAE,GAAGG,IAAI;QAAEE,IAAI,EAAEe,WAAW,CAACf;MAAK,CAAC,GAAGF,IACvE,CACF,CAAC;MAEDG,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOvB,GAAG,EAAE;MACZ;MACAC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAACW,OAAO,CAAC;MACvDY,KAAK,CAAC,0BAA0B,GAAGvB,GAAG,CAACW,OAAO,CAAC;IACjD;EACF,CAAC;EAED,MAAM6B,gBAAgB,GAAG,MAAOrB,MAAM,IAAK;IACzC,IAAI;MACF,MAAMrF,kBAAkB,CAACqF,MAAM,CAAC;MAChCzE,gBAAgB,CAAE4F,SAAS,IAAKA,SAAS,CAACG,MAAM,CAAErB,IAAI,IAAKA,IAAI,CAACH,GAAG,KAAKE,MAAM,CAAC,CAAC;MAChF,IAAIA,MAAM,KAAKlE,cAAc,EAAE;QAC7BC,iBAAiB,CAAC,IAAI,CAAC;MACzB;IACF,CAAC,CAAC,OAAO8C,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,MAAM0C,iBAAiB,GAAG,MAAOvB,MAAM,IAAK;IAC1C,MAAMwB,YAAY,GAAGlG,aAAa,CAAC4E,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACH,GAAG,KAAKE,MAAM,CAAC;IACtE,IAAI,CAACwB,YAAY,CAACC,KAAK,EAAE;MACvBrB,KAAK,CAACsB,CAAC,CAACnD,SAAS,CAAC;MAClB;IACF;IAEA,IAAI;MACF,MAAM3D,mBAAmB,CAACoF,MAAM,CAAC;MACjCzE,gBAAgB,CAAE4F,SAAS,IACzBA,SAAS,CAACC,GAAG,CAAEnB,IAAI,IACjBA,IAAI,CAACH,GAAG,KAAKE,MAAM,GAAG;QAAE,GAAGC,IAAI;QAAE0B,QAAQ,EAAE;MAAK,CAAC,GAAG1B,IACtD,CACF,CAAC;IACH,CAAC,CAAC,OAAOpB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC/C;EACF,CAAC;EAED,MAAM+C,mBAAmB,GAAG,MAAO5B,MAAM,IAAK;IAC5C,MAAMwB,YAAY,GAAGlG,aAAa,CAAC4E,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACH,GAAG,KAAKE,MAAM,CAAC;IACtE,IAAI,CAACwB,YAAY,CAACC,KAAK,EAAE;MACvBrB,KAAK,CAACsB,CAAC,CAACnD,SAAS,CAAC;MAClB;IACF;IAEA,IAAI;MACF,MAAM1D,qBAAqB,CAACmF,MAAM,CAAC;MACnCzE,gBAAgB,CAAE4F,SAAS,IACzBA,SAAS,CAACC,GAAG,CAAEnB,IAAI,IACjBA,IAAI,CAACH,GAAG,KAAKE,MAAM,GAAG;QAAE,GAAGC,IAAI;QAAE0B,QAAQ,EAAE;MAAM,CAAC,GAAG1B,IACvD,CACF,CAAC;IACH,CAAC,CAAC,OAAOpB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;IACjD;EACF,CAAC;EAED,MAAMgD,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAACnG,mBAAmB,CAACkE,IAAI,CAAC,CAAC,IAAI,CAAC9D,cAAc,EAAE;MAClDgD,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC1C;IACF;IAEA,IAAI;MACF,MAAMmC,WAAW,GAAG,MAAMpG,qBAAqB,CAACgB,cAAc,EAAEJ,mBAAmB,CAAC;MACpFH,gBAAgB,CAAE4F,SAAS,IACzBA,SAAS,CAACC,GAAG,CAAEnB,IAAI,IACjBA,IAAI,CAACH,GAAG,KAAKhE,cAAc,GAAG;QAAE,GAAGmE,IAAI;QAAE6B,YAAY,EAAEZ,WAAW,CAACY;MAAa,CAAC,GAAG7B,IACtF,CACF,CAAC;MACDtE,sBAAsB,CAAC,EAAE,CAAC;IAC5B,CAAC,CAAC,OAAOkD,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAClD;EACF,CAAC;EAED,MAAMkD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACnG,WAAW,CAACgE,IAAI,CAAC,CAAC,IAAI,CAAC9D,cAAc,EAAE;IAE5C,MAAM0F,YAAY,GAAGlG,aAAa,CAAC4E,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACH,GAAG,KAAKhE,cAAc,CAAC;IAC9E,IAAI0F,YAAY,CAACG,QAAQ,EAAE;MACzBvB,KAAK,CAACsB,CAAC,CAAClD,YAAY,CAAC;MACrB;IACF;IAEA,IAAI;MACF,MAAM0C,WAAW,GAAG,MAAMnG,aAAa,CAACe,cAAc,EAAEF,WAAW,CAAC;MACpEL,gBAAgB,CAAE4F,SAAS,IACzBA,SAAS,CAACC,GAAG,CAAEnB,IAAI,IACjBA,IAAI,CAACH,GAAG,KAAKhE,cAAc,GAAG;QAAE,GAAGmE,IAAI;QAAE/B,KAAK,EAAEgD,WAAW,CAAChD;MAAM,CAAC,GAAG+B,IACxE,CACF,CAAC;MACDpE,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,OAAOgD,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IAC3C;EACF,CAAC;EAED,MAAMmD,sBAAsB,GAAG,MAAOC,MAAM,IAAK;IAC/C,MAAMT,YAAY,GAAGlG,aAAa,CAAC4E,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACH,GAAG,KAAKhE,cAAc,CAAC;IAC9E,IAAI0F,YAAY,CAACG,QAAQ,EAAE;MACzBvB,KAAK,CAACsB,CAAC,CAAClD,YAAY,CAAC;MACrB;IACF;IAEA,IAAI;MACF,MAAM0D,WAAW,GAAG,MAAMlH,gBAAgB,CAACc,cAAc,EAAEmG,MAAM,CAAC;MAClE1G,gBAAgB,CAAE4F,SAAS,IACzBA,SAAS,CAACC,GAAG,CAAEnB,IAAI,IACjBA,IAAI,CAACH,GAAG,KAAKhE,cAAc,GACvB;QACE,GAAGmE,IAAI;QACP/B,KAAK,EAAE+B,IAAI,CAAC/B,KAAK,CAACkD,GAAG,CAAEe,IAAI,IACzBA,IAAI,CAACrC,GAAG,KAAKmC,MAAM,GAAG;UAAE,GAAGE,IAAI;UAAEC,QAAQ,EAAEF,WAAW,CAACC,IAAI,CAACC;QAAS,CAAC,GAAGD,IAC3E;MACF,CAAC,GACDlC,IACN,CACF,CAAC;IACH,CAAC,CAAC,OAAOpB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;IACrD;EACF,CAAC;EAED,MAAMwD,gBAAgB,GAAG,MAAOJ,MAAM,IAAK;IACzC,IAAI,CAACnG,cAAc,EAAE;IAErB,IAAI;MACF,MAAMb,UAAU,CAACa,cAAc,EAAEmG,MAAM,CAAC;MACxC1G,gBAAgB,CAAE4F,SAAS,IACzBA,SAAS,CAACC,GAAG,CAAEnB,IAAI,IACjBA,IAAI,CAACH,GAAG,KAAKhE,cAAc,GACvB;QAAE,GAAGmE,IAAI;QAAE/B,KAAK,EAAE+B,IAAI,CAAC/B,KAAK,CAACoD,MAAM,CAAEa,IAAI,IAAKA,IAAI,CAACrC,GAAG,KAAKmC,MAAM;MAAE,CAAC,GACpEhC,IACN,CACF,CAAC;IACH,CAAC,CAAC,OAAOpB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,MAAMyD,gBAAgB,GAAItC,MAAM,IAAK;IACnC,MAAMC,IAAI,GAAG3E,aAAa,CAAC4E,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACH,GAAG,KAAKE,MAAM,CAAC;IAC9D,IAAIC,IAAI,EAAE;MACRlE,iBAAiB,CAACiE,MAAM,CAAC;IAC3B,CAAC,MAAM;MACLlB,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEiB,MAAM,CAAC;IACjD;EACF,CAAC;EAED,MAAMuC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMf,YAAY,GAAGlG,aAAa,CAAC4E,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACH,GAAG,KAAKhE,cAAc,CAAC;IAC9E,IAAI,CAAC0F,YAAY,EAAE,OAAO,EAAE;IAC5B,MAAMgB,UAAU,GAAGhB,YAAY,CAACtD,KAAK,CAACuE,MAAM;IAC5C,MAAMC,aAAa,GAAGlB,YAAY,CAACtD,KAAK,CAACoD,MAAM,CAAEa,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,CAACK,MAAM;IAC/E,OAAO,CACL;MAAEtC,IAAI,EAAEuB,CAAC,CAACvD,IAAI;MAAEwE,KAAK,EAAED;IAAc,CAAC,EACtC;MAAEvC,IAAI,EAAEuB,CAAC,CAACtD,MAAM;MAAEuE,KAAK,EAAEH,UAAU,GAAGE;IAAc,CAAC,CACtD;EACH,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B3F,WAAW,CAAC,CAACD,QAAQ,CAAC;IACtB6F,QAAQ,CAAClC,IAAI,CAACmC,SAAS,GAAG9F,QAAQ,GAAG,YAAY,GAAG,WAAW;EACjE,CAAC;EAED,MAAM+F,cAAc,GAAIC,IAAI,IAAK;IAC/B7F,WAAW,CAAC6F,IAAI,CAAC;EACnB,CAAC;EAED,MAAMtB,CAAC,GAAGrE,YAAY,CAACH,QAAQ,CAAC;EAEhC,MAAMsE,YAAY,GAAGlG,aAAa,CAAC4E,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACH,GAAG,KAAKhE,cAAc,CAAC;EAC9E,IAAI,CAACE,eAAe,EAAE;IACpB,oBACEb,OAAA;MAAK2H,SAAS,EAAC,gBAAgB;MAAAG,QAAA,gBAC7B9H,OAAA;QAAA8H,QAAA,EAAK7G,QAAQ,KAAK,OAAO,GAAG,QAAQ,GAAG;MAAS;QAAA8G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACrDzG,SAAS,iBAAIzB,OAAA;QAAG2H,SAAS,EAAC,OAAO;QAAAG,QAAA,EAAErG;MAAS;QAAAsG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDlI,OAAA;QACEmI,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBZ,KAAK,EAAErG,KAAM;QACbkH,QAAQ,EAAGC,CAAC,IAAKlH,QAAQ,CAACkH,CAAC,CAACC,MAAM,CAACf,KAAK;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFlI,OAAA;QACEmI,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBZ,KAAK,EAAEnG,QAAS;QAChBgH,QAAQ,EAAGC,CAAC,IAAKhH,WAAW,CAACgH,CAAC,CAACC,MAAM,CAACf,KAAK;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFlI,OAAA;QAAQwI,OAAO,EAAE3E,gBAAiB;QAAAiE,QAAA,EAC/B7G,QAAQ,KAAK,OAAO,GAAG,QAAQ,GAAG;MAAS;QAAA8G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACTlI,OAAA;QAAA8H,QAAA,EACG7G,QAAQ,KAAK,OAAO,gBACnBjB,OAAA;UAAMwI,OAAO,EAAEA,CAAA,KAAMtH,WAAW,CAAC,UAAU,CAAE;UAAA4G,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAEtElI,OAAA;UAAMwI,OAAO,EAAEA,CAAA,KAAMtH,WAAW,CAAC,OAAO,CAAE;UAAA4G,QAAA,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAC1E;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEV;EAGA,oBACElI,OAAA;IAAK2H,SAAS,EAAE,OAAO9F,QAAQ,GAAG,WAAW,GAAG,YAAY,EAAG;IAAAiG,QAAA,gBAC7D9H,OAAA;MAAK2H,SAAS,EAAC,yBAAyB;MAAAG,QAAA,gBACtC9H,OAAA;QAAK2H,SAAS,EAAC,eAAe;QAACa,OAAO,EAAEA,CAAA,KAAM5G,WAAW,CAAC,CAACD,QAAQ,CAAE;QAAAmG,QAAA,EAAC;MAEtE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACLvG,QAAQ,iBACP3B,OAAA;QAAK2H,SAAS,EAAC,eAAe;QAAAG,QAAA,gBAC5B9H,OAAA;UAAQwI,OAAO,EAAElE,YAAa;UAAAwD,QAAA,EAAEvB,CAAC,CAAC/D;QAAM;UAAAuF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAClDlI,OAAA;UAAQwI,OAAO,EAAEf,cAAe;UAAAK,QAAA,EAC7BjG,QAAQ,GAAG0E,CAAC,CAAC9D,SAAS,GAAG8D,CAAC,CAAC1E;QAAQ;UAAAkG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACTlI,OAAA;UAAA8H,QAAA,gBACE9H,OAAA;YAAA8H,QAAA,EAAKvB,CAAC,CAACxE;UAAQ;YAAAgG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBlI,OAAA;YAAQwI,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,IAAI,CAAE;YAAAE,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7DlI,OAAA;YAAQwI,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,IAAI,CAAE;YAAAE,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNlI,OAAA;MAAA8H,QAAA,EAAKvB,CAAC,CAACnE;IAAY;MAAA2F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBlI,OAAA;MAAK2H,SAAS,EAAC,WAAW;MAAAG,QAAA,gBACxB9H,OAAA;QAAK2H,SAAS,EAAC,SAAS;QAAAG,QAAA,gBACtB9H,OAAA;UAAA8H,QAAA,EAAKvB,CAAC,CAACnE;QAAY;UAAA2F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzBlI,OAAA;UACEmI,IAAI,EAAC,MAAM;UACXC,WAAW,EAAE7B,CAAC,CAAClG,WAAY;UAC3BmH,KAAK,EAAEnH,WAAY;UACnBgI,QAAQ,EAAGC,CAAC,IAAKhI,cAAc,CAACgI,CAAC,CAACC,MAAM,CAACf,KAAK;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACFlI,OAAA;UAAQwI,OAAO,EAAEhE,gBAAiB;UAAAsD,QAAA,EAAEvB,CAAC,CAACjE;QAAU;UAAAyF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC1DlI,OAAA;UAAK2H,SAAS,EAAC,iBAAiB;UAAAG,QAAA,EAC7B3H,aAAa,CAAC8F,GAAG,CAAEnB,IAAI,iBACtB9E,OAAA;YAEE2H,SAAS,EAAE,aAAa7C,IAAI,CAACH,GAAG,KAAKhE,cAAc,GAAG,UAAU,GAAG,EAAE,EAAG;YACxE6H,OAAO,EAAEA,CAAA,KAAMrB,gBAAgB,CAACrC,IAAI,CAACH,GAAG,CAAE;YAAAmD,QAAA,gBAE1C9H,OAAA;cAAM2H,SAAS,EAAC,mBAAmB;cAAAG,QAAA,EAAEhD,IAAI,CAACE;YAAI;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EACrDpD,IAAI,CAAC0B,QAAQ,gBACZxG,OAAA;cACE2H,SAAS,EAAC,kBAAkB;cAC5Ba,OAAO,EAAGF,CAAC,IAAK;gBACdA,CAAC,CAACG,eAAe,CAAC,CAAC;gBACnBhC,mBAAmB,CAAC3B,IAAI,CAACH,GAAG,CAAC;cAC/B,CAAE;cAAAmD,QAAA,EAEDvB,CAAC,CAAC5D;YAAS;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,gBAETlI,OAAA;cACE2H,SAAS,EAAC,gBAAgB;cAC1Ba,OAAO,EAAGF,CAAC,IAAK;gBACdA,CAAC,CAACG,eAAe,CAAC,CAAC;gBACnBrC,iBAAiB,CAACtB,IAAI,CAACH,GAAG,CAAC;cAC7B,CAAE;cAAAmD,QAAA,EAEDvB,CAAC,CAAC7D;YAAO;cAAAqF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACT,eACDlI,OAAA;cACE2H,SAAS,EAAC,eAAe;cACzBa,OAAO,EAAGF,CAAC,IAAK;gBACdA,CAAC,CAACG,eAAe,CAAC,CAAC;gBACnBvC,gBAAgB,CAACpB,IAAI,CAACH,GAAG,CAAC;cAC5B,CAAE;cAAAmD,QAAA,EAEDvB,CAAC,CAAC3D;YAAM;cAAAmF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA,GAlCJpD,IAAI,CAACH,GAAG;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmCV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EACL7B,YAAY,iBACXrG,OAAA;UAAA8H,QAAA,gBACE9H,OAAA;YAAA8H,QAAA,EAAKvB,CAAC,CAACI;UAAY;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBlI,OAAA;YACEmI,IAAI,EAAC,MAAM;YACXC,WAAW,EAAE7B,CAAC,CAAChE,gBAAiB;YAChCiF,KAAK,EAAEjH,mBAAoB;YAC3B8H,QAAQ,EAAGC,CAAC,IAAK9H,sBAAsB,CAAC8H,CAAC,CAACC,MAAM,CAACf,KAAK;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC,eACFlI,OAAA;YAAQwI,OAAO,EAAE9B,oBAAqB;YAAAoB,QAAA,EAAEvB,CAAC,CAAClE;UAAc;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAClElI,OAAA;YAAA8H,QAAA,EACG,CAACzB,YAAY,CAACM,YAAY,IAAI,EAAE,EAAEV,GAAG,CAAEyC,WAAW,iBACjD1I,OAAA;cAAA8H,QAAA,EAAgDY,WAAW,CAACvH;YAAK,GAAxDuH,WAAW,CAAC/D,GAAG,IAAI+D,WAAW,CAACvH,KAAK;cAAA4G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAyB,CACvE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNlI,OAAA;QAAK2H,SAAS,EAAC,cAAc;QAAAG,QAAA,EAClCzB,YAAY,gBACXrG,OAAA;UAAA8H,QAAA,gBACE9H,OAAA;YAAA8H,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBlI,OAAA;YACEmI,IAAI,EAAC,MAAM;YACXX,KAAK,EAAEnB,YAAY,CAACrB,IAAI,IAAI,EAAG,CAAC;YAAA;YAChCqD,QAAQ,EAAGC,CAAC,IAAK;cACf;cACAlI,gBAAgB,CAAE4F,SAAS,IACzBA,SAAS,CAACC,GAAG,CAAEnB,IAAI,IACjBA,IAAI,CAACH,GAAG,KAAKhE,cAAc,GACvB;gBAAE,GAAGmE,IAAI;gBAAEE,IAAI,EAAEsD,CAAC,CAACC,MAAM,CAACf;cAAM,CAAC,GACjC1C,IACN,CACF,CAAC;YACH,CAAE;YACF6D,MAAM,EAAEA,CAAA,KAAM;cACZ;cACA,MAAMC,WAAW,GAAGvC,YAAY,CAACrB,IAAI,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC;cAC9C,IAAImE,WAAW,EAAE;gBACfhE,qBAAqB,CAACjE,cAAc,CAAC;cACvC,CAAC,MAAM;gBACLsE,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;cACtC;YACF,CAAE;YACFmD,WAAW,EAAC,gBAAgB;YAC5BT,SAAS,EAAC;UAAsB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACMlI,OAAA;YAAA8H,QAAA,EAAKvB,CAAC,CAACxD;UAAK;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClBlI,OAAA;YACEmI,IAAI,EAAC,MAAM;YACXC,WAAW,EAAE7B,CAAC,CAACzD,OAAQ;YACvB0E,KAAK,EAAE/G,WAAY;YACnB4H,QAAQ,EAAGC,CAAC,IAAK5H,cAAc,CAAC4H,CAAC,CAACC,MAAM,CAACf,KAAK;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACFlI,OAAA;YAAQwI,OAAO,EAAE5B,aAAc;YAAAkB,QAAA,EAAEvB,CAAC,CAAC1D;UAAO;YAAAkF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eACpDlI,OAAA;YAAA8H,QAAA,EACG,CAACzB,YAAY,CAACtD,KAAK,IAAI,EAAE,EAAEkD,GAAG,CAAEe,IAAI,iBACnChH,OAAA;cAAA8H,QAAA,gBACE9H,OAAA;gBACE6I,KAAK,EAAE;kBACLC,cAAc,EAAE9B,IAAI,CAACC,QAAQ,GAAG,cAAc,GAAG;gBACnD,CAAE;gBAAAa,QAAA,EAEDd,IAAI,CAAChC;cAAI;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eACPlI,OAAA;gBAAQwI,OAAO,EAAEA,CAAA,KAAM3B,sBAAsB,CAACG,IAAI,CAACrC,GAAG,CAAE;gBAAAmD,QAAA,EACrDd,IAAI,CAACC,QAAQ,GAAGV,CAAC,CAACtD,MAAM,GAAGsD,CAAC,CAACvD;cAAI;gBAAA+E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACTlI,OAAA;gBAAQwI,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAACF,IAAI,CAACrC,GAAG,CAAE;gBAAAmD,QAAA,EAAEvB,CAAC,CAAC3D;cAAM;gBAAAmF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC;YAAA,GAX/DlB,IAAI,CAACrC,GAAG;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAYb,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLlI,OAAA;YAAA8H,QAAA,gBACE9H,OAAA;cAAA8H,QAAA,EAAKvB,CAAC,CAACrD;YAAQ;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBlI,OAAA,CAAChB,QAAQ;cAAC+J,KAAK,EAAE,GAAI;cAACC,MAAM,EAAE,GAAI;cAAAlB,QAAA,gBAChC9H,OAAA,CAACf,GAAG;gBACF6E,IAAI,EAAEsD,YAAY,CAAC,CAAE;gBACrB6B,OAAO,EAAC,OAAO;gBACfC,EAAE,EAAC,KAAK;gBACRC,EAAE,EAAC,KAAK;gBACRC,WAAW,EAAE,GAAI;gBAAAtB,QAAA,EAEhBV,YAAY,CAAC,CAAC,CAACnB,GAAG,CAAC,CAACoD,KAAK,EAAEC,KAAK,kBAC/BtJ,OAAA,CAACd,IAAI;kBAAuBqK,IAAI,EAAEtH,MAAM,CAACqH,KAAK,GAAGrH,MAAM,CAACqF,MAAM;gBAAE,GAArD,QAAQgC,KAAK,EAAE;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAwC,CACnE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACNlI,OAAA,CAACb,MAAM;gBAAA4I,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAENlI,OAAA;UAAA8H,QAAA,EAAIvB,CAAC,CAACpD;QAAU;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MACrB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAAChI,EAAA,CA/hBID,GAAG;AAAAuJ,EAAA,GAAHvJ,GAAG;AAiiBT,eAAeA,GAAG;AAAC,IAAAuJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}