{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ab214\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\shopppinglist\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport './App.css';\nimport { registerUser, loginUser, fetchShoppingLists, createShoppingList, deleteShoppingList, archiveShoppingList, unarchiveShoppingList, addParticipantByEmail, addItemToList } from './services/apiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [newParticipantEmail, setNewParticipantEmail] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState(null); // ID текущего пользователя\n  const [authMode, setAuthMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [authError, setAuthError] = useState('');\n  const COLORS = ['#0088FE', '#FF8042'];\n\n  // Fetch lists and user on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          lists,\n          userId\n        } = await fetchShoppingLists();\n        setShoppingLists(lists);\n        setCurrentUserId(userId);\n      } catch (err) {\n        console.error('Error fetching shopping lists:', err);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAuthSubmit = async () => {\n    try {\n      setAuthError('');\n      if (authMode === 'register') {\n        await registerUser({\n          email,\n          password,\n          username\n        });\n        setAuthMode('login');\n      } else {\n        const response = await loginUser({\n          email,\n          password\n        });\n        setCurrentUserId(response.userId);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setAuthError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Authentication failed');\n    }\n  };\n  const handleAddNewList = async () => {\n    if (!newListName.trim()) {\n      console.error('List name is empty');\n      return;\n    }\n    try {\n      const newList = await createShoppingList(newListName);\n      setShoppingLists([...shoppingLists, newList]);\n      setNewListName('');\n      setSelectedListId(newList._id);\n    } catch (err) {\n      console.error('Failed to add new list:', err);\n    }\n  };\n  const handleDeleteList = async listId => {\n    try {\n      await deleteShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.filter(list => list._id !== listId));\n      if (listId === selectedListId) {\n        setSelectedListId(null);\n      }\n    } catch (err) {\n      console.error('Failed to delete list:', err);\n    }\n  };\n  const handleArchiveList = async listId => {\n    try {\n      await archiveShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === listId ? {\n        ...list,\n        archived: true\n      } : list));\n    } catch (err) {\n      console.error('Failed to archive list:', err);\n    }\n  };\n  const handleUnarchiveList = async listId => {\n    try {\n      await unarchiveShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === listId ? {\n        ...list,\n        archived: false\n      } : list));\n    } catch (err) {\n      console.error('Failed to unarchive list:', err);\n    }\n  };\n  const handleAddParticipant = async () => {\n    if (!newParticipantEmail.trim() || !selectedListId) {\n      console.error('No email or list selected');\n      return;\n    }\n    try {\n      const updatedList = await addParticipantByEmail(selectedListId, newParticipantEmail);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        participants: updatedList.participants\n      } : list));\n      setNewParticipantEmail('');\n    } catch (err) {\n      console.error('Failed to add participant:', err);\n    }\n  };\n  const handleAddItem = async () => {\n    if (!newItemName.trim() || !selectedListId) return;\n    try {\n      const updatedList = await addItemToList(selectedListId, newItemName);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: updatedList.items\n      } : list));\n      setNewItemName('');\n    } catch (err) {\n      console.error('Failed to add item:', err);\n    }\n  };\n  const handleSelectList = listId => {\n    const list = shoppingLists.find(list => list._id === listId);\n    if (list) {\n      setSelectedListId(listId);\n    } else {\n      console.error('No list found with ID:', listId);\n    }\n  };\n  const getChartData = () => {\n    const selectedList = shoppingLists.find(list => list._id === selectedListId);\n    if (!selectedList) return [];\n    const totalItems = selectedList.items.length;\n    const resolvedItems = selectedList.items.filter(item => item.resolved).length;\n    return [{\n      name: 'Resolved',\n      value: resolvedItems\n    }, {\n      name: 'Unresolved',\n      value: totalItems - resolvedItems\n    }];\n  };\n  const selectedList = shoppingLists.find(list => list._id === selectedListId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shopping List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shopping Lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New list name\",\n          value: newListName,\n          onChange: e => setNewListName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewList,\n          children: \"Add New List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lists-container\",\n          children: shoppingLists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${list._id === selectedListId ? 'selected' : ''}`,\n            onClick: () => !list.archived && handleSelectList(list._id),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), list.archived ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"unarchive-button\",\n              onClick: e => {\n                e.stopPropagation();\n                handleUnarchiveList(list._id);\n              },\n              children: \"Unarchive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this) : list.owner === currentUserId && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"archive-button\",\n              onClick: e => {\n                e.stopPropagation();\n                handleArchiveList(list._id);\n              },\n              children: \"Archive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this), !list.archived && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteList(list._id);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)]\n          }, list._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), selectedList && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Participants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Participant email\",\n            value: newParticipantEmail,\n            onChange: e => setNewParticipantEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddParticipant,\n            children: \"Add Participant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (selectedList.participants || []).map(participant => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: participant.email\n            }, participant._id || participant.email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: selectedList ? selectedList.archived ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This list is archived and cannot be modified.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedList.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"New item\",\n              value: newItemName,\n              onChange: e => setNewItemName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddItem,\n              children: \"Add Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: (selectedList.items || []).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item.name\n              }, item.id || item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n              width: 300,\n              height: 300,\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: getChartData(),\n                dataKey: \"value\",\n                cx: \"50%\",\n                cy: \"50%\",\n                outerRadius: 100,\n                children: getChartData().map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a list to view details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WguLUHzA2ipgVE9x9DyerXN3ICs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","Legend","registerUser","loginUser","fetchShoppingLists","createShoppingList","deleteShoppingList","archiveShoppingList","unarchiveShoppingList","addParticipantByEmail","addItemToList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","shoppingLists","setShoppingLists","newListName","setNewListName","newParticipantEmail","setNewParticipantEmail","newItemName","setNewItemName","selectedListId","setSelectedListId","currentUserId","setCurrentUserId","authMode","setAuthMode","email","setEmail","password","setPassword","username","setUsername","authError","setAuthError","COLORS","fetchData","lists","userId","err","console","error","handleAuthSubmit","response","_err$response","_err$response$data","data","message","handleAddNewList","trim","newList","_id","handleDeleteList","listId","prevLists","filter","list","handleArchiveList","map","archived","handleUnarchiveList","handleAddParticipant","updatedList","participants","handleAddItem","items","handleSelectList","find","getChartData","selectedList","totalItems","length","resolvedItems","item","resolved","name","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","stopPropagation","owner","participant","id","width","height","dataKey","cx","cy","outerRadius","entry","index","fill","_c","$RefreshReg$"],"sources":["C:/Users/ab214/OneDrive/Рабочий стол/shopppinglist/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport './App.css';\nimport {\n  registerUser,\n  loginUser,\n  fetchShoppingLists,\n  createShoppingList,\n  deleteShoppingList,\n  archiveShoppingList,\n  unarchiveShoppingList,\n  addParticipantByEmail,\n  addItemToList,\n} from './services/apiService';\n\nconst App = () => {\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [newParticipantEmail, setNewParticipantEmail] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState(null); // ID текущего пользователя\n  const [authMode, setAuthMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [authError, setAuthError] = useState('');\n  const COLORS = ['#0088FE', '#FF8042'];\n\n  // Fetch lists and user on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { lists, userId } = await fetchShoppingLists();\n        setShoppingLists(lists);\n        setCurrentUserId(userId);\n      } catch (err) {\n        console.error('Error fetching shopping lists:', err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handleAuthSubmit = async () => {\n    try {\n      setAuthError('');\n      if (authMode === 'register') {\n        await registerUser({ email, password, username });\n        setAuthMode('login');\n      } else {\n        const response = await loginUser({ email, password });\n        setCurrentUserId(response.userId);\n      }\n    } catch (err) {\n      setAuthError(err.response?.data?.message || 'Authentication failed');\n    }\n  };\n\n  const handleAddNewList = async () => {\n    if (!newListName.trim()) {\n      console.error('List name is empty');\n      return;\n    }\n\n    try {\n      const newList = await createShoppingList(newListName);\n      setShoppingLists([...shoppingLists, newList]);\n      setNewListName('');\n      setSelectedListId(newList._id);\n    } catch (err) {\n      console.error('Failed to add new list:', err);\n    }\n  };\n\n  const handleDeleteList = async (listId) => {\n    try {\n      await deleteShoppingList(listId);\n      setShoppingLists((prevLists) => prevLists.filter((list) => list._id !== listId));\n      if (listId === selectedListId) {\n        setSelectedListId(null);\n      }\n    } catch (err) {\n      console.error('Failed to delete list:', err);\n    }\n  };\n\n  const handleArchiveList = async (listId) => {\n    try {\n      await archiveShoppingList(listId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === listId ? { ...list, archived: true } : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to archive list:', err);\n    }\n  };\n\n  const handleUnarchiveList = async (listId) => {\n    try {\n      await unarchiveShoppingList(listId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === listId ? { ...list, archived: false } : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to unarchive list:', err);\n    }\n  };\n\n  const handleAddParticipant = async () => {\n    if (!newParticipantEmail.trim() || !selectedListId) {\n      console.error('No email or list selected');\n      return;\n    }\n\n    try {\n      const updatedList = await addParticipantByEmail(selectedListId, newParticipantEmail);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId ? { ...list, participants: updatedList.participants } : list\n        )\n      );\n      setNewParticipantEmail('');\n    } catch (err) {\n      console.error('Failed to add participant:', err);\n    }\n  };\n\n  const handleAddItem = async () => {\n    if (!newItemName.trim() || !selectedListId) return;\n    try {\n      const updatedList = await addItemToList(selectedListId, newItemName);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId ? { ...list, items: updatedList.items } : list\n        )\n      );\n      setNewItemName('');\n    } catch (err) {\n      console.error('Failed to add item:', err);\n    }\n  };\n\n  const handleSelectList = (listId) => {\n    const list = shoppingLists.find((list) => list._id === listId);\n    if (list) {\n      setSelectedListId(listId);\n    } else {\n      console.error('No list found with ID:', listId);\n    }\n  };\n\n  const getChartData = () => {\n    const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n    if (!selectedList) return [];\n    const totalItems = selectedList.items.length;\n    const resolvedItems = selectedList.items.filter((item) => item.resolved).length;\n    return [\n      { name: 'Resolved', value: resolvedItems },\n      { name: 'Unresolved', value: totalItems - resolvedItems },\n    ];\n  };\n\n  const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n\n  return (\n    <div className=\"App\">\n      <h1>Shopping List</h1>\n      <div className=\"container\">\n        <div className=\"sidebar\">\n          <h2>Shopping Lists</h2>\n          <input\n            type=\"text\"\n            placeholder=\"New list name\"\n            value={newListName}\n            onChange={(e) => setNewListName(e.target.value)}\n          />\n          <button onClick={handleAddNewList}>Add New List</button>\n          <div className=\"lists-container\">\n            {shoppingLists.map((list) => (\n              <div\n                key={list._id}\n                className={`list-item ${list._id === selectedListId ? 'selected' : ''}`}\n                onClick={() => !list.archived && handleSelectList(list._id)}\n              >\n                <span>{list.name}</span>\n                {list.archived ? (\n                  <button\n                    className=\"unarchive-button\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleUnarchiveList(list._id);\n                    }}\n                  >\n                    Unarchive\n                  </button>\n                ) : (\n                  list.owner === currentUserId && (\n                    <button\n                      className=\"archive-button\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleArchiveList(list._id);\n                      }}\n                    >\n                      Archive\n                    </button>\n                  )\n                )}\n                {!list.archived && (\n                  <button\n                    className=\"delete-button\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleDeleteList(list._id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n          {selectedList && (\n            <div>\n              <h3>Participants</h3>\n              <input\n                type=\"text\"\n                placeholder=\"Participant email\"\n                value={newParticipantEmail}\n                onChange={(e) => setNewParticipantEmail(e.target.value)}\n              />\n              <button onClick={handleAddParticipant}>Add Participant</button>\n              <ul>\n                {(selectedList.participants || []).map((participant) => (\n                  <li key={participant._id || participant.email}>{participant.email}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        <div className=\"main-content\">\n          {selectedList ? (\n            selectedList.archived ? (\n              <p>This list is archived and cannot be modified.</p>\n            ) : (\n              <>\n                <h2>{selectedList.name}</h2>\n                <div>\n                  <h3>Items</h3>\n                  <input\n                    type=\"text\"\n                    placeholder=\"New item\"\n                    value={newItemName}\n                    onChange={(e) => setNewItemName(e.target.value)}\n                  />\n                  <button onClick={handleAddItem}>Add Item</button>\n                  <ul>\n                    {(selectedList.items || []).map((item) => (\n                      <li key={item.id || item._id}>{item.name}</li>\n                    ))}\n                  </ul>\n                </div>\n                <div>\n                  <h3>Overview</h3>\n                  <PieChart width={300} height={300}>\n                    <Pie\n                      data={getChartData()}\n                      dataKey=\"value\"\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      outerRadius={100}\n                    >\n                      {getChartData().map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                      ))}\n                    </Pie>\n                    <Legend />\n                  </PieChart>\n                </div>\n              </>\n            )\n          ) : (\n            <p>Select a list to view details</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,QAAQ,UAAU;AACtD,OAAO,WAAW;AAClB,SACEC,YAAY,EACZC,SAAS,EACTC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,EAClBC,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,EACrBC,aAAa,QACR,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACiC,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACmC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuC,QAAQ,EAAEC,WAAW,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyC,SAAS,EAAEC,YAAY,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM2C,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;;EAErC;EACA1C,SAAS,CAAC,MAAM;IACd,MAAM2C,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAM;UAAEC,KAAK;UAAEC;QAAO,CAAC,GAAG,MAAMtC,kBAAkB,CAAC,CAAC;QACpDc,gBAAgB,CAACuB,KAAK,CAAC;QACvBb,gBAAgB,CAACc,MAAM,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;MACtD;IACF,CAAC;IACDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFR,YAAY,CAAC,EAAE,CAAC;MAChB,IAAIT,QAAQ,KAAK,UAAU,EAAE;QAC3B,MAAM3B,YAAY,CAAC;UAAE6B,KAAK;UAAEE,QAAQ;UAAEE;QAAS,CAAC,CAAC;QACjDL,WAAW,CAAC,OAAO,CAAC;MACtB,CAAC,MAAM;QACL,MAAMiB,QAAQ,GAAG,MAAM5C,SAAS,CAAC;UAAE4B,KAAK;UAAEE;QAAS,CAAC,CAAC;QACrDL,gBAAgB,CAACmB,QAAQ,CAACL,MAAM,CAAC;MACnC;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAK,aAAA,EAAAC,kBAAA;MACZX,YAAY,CAAC,EAAAU,aAAA,GAAAL,GAAG,CAACI,QAAQ,cAAAC,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcE,IAAI,cAAAD,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,uBAAuB,CAAC;IACtE;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACjC,WAAW,CAACkC,IAAI,CAAC,CAAC,EAAE;MACvBT,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACnC;IACF;IAEA,IAAI;MACF,MAAMS,OAAO,GAAG,MAAMjD,kBAAkB,CAACc,WAAW,CAAC;MACrDD,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEqC,OAAO,CAAC,CAAC;MAC7ClC,cAAc,CAAC,EAAE,CAAC;MAClBM,iBAAiB,CAAC4B,OAAO,CAACC,GAAG,CAAC;IAChC,CAAC,CAAC,OAAOZ,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC/C;EACF,CAAC;EAED,MAAMa,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF,MAAMnD,kBAAkB,CAACmD,MAAM,CAAC;MAChCvC,gBAAgB,CAAEwC,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACL,GAAG,KAAKE,MAAM,CAAC,CAAC;MAChF,IAAIA,MAAM,KAAKhC,cAAc,EAAE;QAC7BC,iBAAiB,CAAC,IAAI,CAAC;MACzB;IACF,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,MAAMkB,iBAAiB,GAAG,MAAOJ,MAAM,IAAK;IAC1C,IAAI;MACF,MAAMlD,mBAAmB,CAACkD,MAAM,CAAC;MACjCvC,gBAAgB,CAAEwC,SAAS,IACzBA,SAAS,CAACI,GAAG,CAAEF,IAAI,IACjBA,IAAI,CAACL,GAAG,KAAKE,MAAM,GAAG;QAAE,GAAGG,IAAI;QAAEG,QAAQ,EAAE;MAAK,CAAC,GAAGH,IACtD,CACF,CAAC;IACH,CAAC,CAAC,OAAOjB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC/C;EACF,CAAC;EAED,MAAMqB,mBAAmB,GAAG,MAAOP,MAAM,IAAK;IAC5C,IAAI;MACF,MAAMjD,qBAAqB,CAACiD,MAAM,CAAC;MACnCvC,gBAAgB,CAAEwC,SAAS,IACzBA,SAAS,CAACI,GAAG,CAAEF,IAAI,IACjBA,IAAI,CAACL,GAAG,KAAKE,MAAM,GAAG;QAAE,GAAGG,IAAI;QAAEG,QAAQ,EAAE;MAAM,CAAC,GAAGH,IACvD,CACF,CAAC;IACH,CAAC,CAAC,OAAOjB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;IACjD;EACF,CAAC;EAED,MAAMsB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAAC5C,mBAAmB,CAACgC,IAAI,CAAC,CAAC,IAAI,CAAC5B,cAAc,EAAE;MAClDmB,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC1C;IACF;IAEA,IAAI;MACF,MAAMqB,WAAW,GAAG,MAAMzD,qBAAqB,CAACgB,cAAc,EAAEJ,mBAAmB,CAAC;MACpFH,gBAAgB,CAAEwC,SAAS,IACzBA,SAAS,CAACI,GAAG,CAAEF,IAAI,IACjBA,IAAI,CAACL,GAAG,KAAK9B,cAAc,GAAG;QAAE,GAAGmC,IAAI;QAAEO,YAAY,EAAED,WAAW,CAACC;MAAa,CAAC,GAAGP,IACtF,CACF,CAAC;MACDtC,sBAAsB,CAAC,EAAE,CAAC;IAC5B,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAClD;EACF,CAAC;EAED,MAAMyB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAC7C,WAAW,CAAC8B,IAAI,CAAC,CAAC,IAAI,CAAC5B,cAAc,EAAE;IAC5C,IAAI;MACF,MAAMyC,WAAW,GAAG,MAAMxD,aAAa,CAACe,cAAc,EAAEF,WAAW,CAAC;MACpEL,gBAAgB,CAAEwC,SAAS,IACzBA,SAAS,CAACI,GAAG,CAAEF,IAAI,IACjBA,IAAI,CAACL,GAAG,KAAK9B,cAAc,GAAG;QAAE,GAAGmC,IAAI;QAAES,KAAK,EAAEH,WAAW,CAACG;MAAM,CAAC,GAAGT,IACxE,CACF,CAAC;MACDpC,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IAC3C;EACF,CAAC;EAED,MAAM2B,gBAAgB,GAAIb,MAAM,IAAK;IACnC,MAAMG,IAAI,GAAG3C,aAAa,CAACsD,IAAI,CAAEX,IAAI,IAAKA,IAAI,CAACL,GAAG,KAAKE,MAAM,CAAC;IAC9D,IAAIG,IAAI,EAAE;MACRlC,iBAAiB,CAAC+B,MAAM,CAAC;IAC3B,CAAC,MAAM;MACLb,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEY,MAAM,CAAC;IACjD;EACF,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAGxD,aAAa,CAACsD,IAAI,CAAEX,IAAI,IAAKA,IAAI,CAACL,GAAG,KAAK9B,cAAc,CAAC;IAC9E,IAAI,CAACgD,YAAY,EAAE,OAAO,EAAE;IAC5B,MAAMC,UAAU,GAAGD,YAAY,CAACJ,KAAK,CAACM,MAAM;IAC5C,MAAMC,aAAa,GAAGH,YAAY,CAACJ,KAAK,CAACV,MAAM,CAAEkB,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,CAACH,MAAM;IAC/E,OAAO,CACL;MAAEI,IAAI,EAAE,UAAU;MAAEC,KAAK,EAAEJ;IAAc,CAAC,EAC1C;MAAEG,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAEN,UAAU,GAAGE;IAAc,CAAC,CAC1D;EACH,CAAC;EAED,MAAMH,YAAY,GAAGxD,aAAa,CAACsD,IAAI,CAAEX,IAAI,IAAKA,IAAI,CAACL,GAAG,KAAK9B,cAAc,CAAC;EAE9E,oBACEb,OAAA;IAAKqE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtE,OAAA;MAAAsE,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB1E,OAAA;MAAKqE,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBtE,OAAA;QAAKqE,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBtE,OAAA;UAAAsE,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvB1E,OAAA;UACE2E,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,eAAe;UAC3BR,KAAK,EAAE7D,WAAY;UACnBsE,QAAQ,EAAGC,CAAC,IAAKtE,cAAc,CAACsE,CAAC,CAACC,MAAM,CAACX,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACF1E,OAAA;UAAQgF,OAAO,EAAExC,gBAAiB;UAAA8B,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxD1E,OAAA;UAAKqE,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7BjE,aAAa,CAAC6C,GAAG,CAAEF,IAAI,iBACtBhD,OAAA;YAEEqE,SAAS,EAAE,aAAarB,IAAI,CAACL,GAAG,KAAK9B,cAAc,GAAG,UAAU,GAAG,EAAE,EAAG;YACxEmE,OAAO,EAAEA,CAAA,KAAM,CAAChC,IAAI,CAACG,QAAQ,IAAIO,gBAAgB,CAACV,IAAI,CAACL,GAAG,CAAE;YAAA2B,QAAA,gBAE5DtE,OAAA;cAAAsE,QAAA,EAAOtB,IAAI,CAACmB;YAAI;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EACvB1B,IAAI,CAACG,QAAQ,gBACZnD,OAAA;cACEqE,SAAS,EAAC,kBAAkB;cAC5BW,OAAO,EAAGF,CAAC,IAAK;gBACdA,CAAC,CAACG,eAAe,CAAC,CAAC;gBACnB7B,mBAAmB,CAACJ,IAAI,CAACL,GAAG,CAAC;cAC/B,CAAE;cAAA2B,QAAA,EACH;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GAET1B,IAAI,CAACkC,KAAK,KAAKnE,aAAa,iBAC1Bf,OAAA;cACEqE,SAAS,EAAC,gBAAgB;cAC1BW,OAAO,EAAGF,CAAC,IAAK;gBACdA,CAAC,CAACG,eAAe,CAAC,CAAC;gBACnBhC,iBAAiB,CAACD,IAAI,CAACL,GAAG,CAAC;cAC7B,CAAE;cAAA2B,QAAA,EACH;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAEX,EACA,CAAC1B,IAAI,CAACG,QAAQ,iBACbnD,OAAA;cACEqE,SAAS,EAAC,eAAe;cACzBW,OAAO,EAAGF,CAAC,IAAK;gBACdA,CAAC,CAACG,eAAe,CAAC,CAAC;gBACnBrC,gBAAgB,CAACI,IAAI,CAACL,GAAG,CAAC;cAC5B,CAAE;cAAA2B,QAAA,EACH;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA,GAtCI1B,IAAI,CAACL,GAAG;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuCV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EACLb,YAAY,iBACX7D,OAAA;UAAAsE,QAAA,gBACEtE,OAAA;YAAAsE,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrB1E,OAAA;YACE2E,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,mBAAmB;YAC/BR,KAAK,EAAE3D,mBAAoB;YAC3BoE,QAAQ,EAAGC,CAAC,IAAKpE,sBAAsB,CAACoE,CAAC,CAACC,MAAM,CAACX,KAAK;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC,eACF1E,OAAA;YAAQgF,OAAO,EAAE3B,oBAAqB;YAAAiB,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/D1E,OAAA;YAAAsE,QAAA,EACG,CAACT,YAAY,CAACN,YAAY,IAAI,EAAE,EAAEL,GAAG,CAAEiC,WAAW,iBACjDnF,OAAA;cAAAsE,QAAA,EAAgDa,WAAW,CAAChE;YAAK,GAAxDgE,WAAW,CAACxC,GAAG,IAAIwC,WAAW,CAAChE,KAAK;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAyB,CACvE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN1E,OAAA;QAAKqE,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BT,YAAY,GACXA,YAAY,CAACV,QAAQ,gBACnBnD,OAAA;UAAAsE,QAAA,EAAG;QAA6C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEpD1E,OAAA,CAAAE,SAAA;UAAAoE,QAAA,gBACEtE,OAAA;YAAAsE,QAAA,EAAKT,YAAY,CAACM;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5B1E,OAAA;YAAAsE,QAAA,gBACEtE,OAAA;cAAAsE,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACd1E,OAAA;cACE2E,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,UAAU;cACtBR,KAAK,EAAEzD,WAAY;cACnBkE,QAAQ,EAAGC,CAAC,IAAKlE,cAAc,CAACkE,CAAC,CAACC,MAAM,CAACX,KAAK;YAAE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD,CAAC,eACF1E,OAAA;cAAQgF,OAAO,EAAExB,aAAc;cAAAc,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACjD1E,OAAA;cAAAsE,QAAA,EACG,CAACT,YAAY,CAACJ,KAAK,IAAI,EAAE,EAAEP,GAAG,CAAEe,IAAI,iBACnCjE,OAAA;gBAAAsE,QAAA,EAA+BL,IAAI,CAACE;cAAI,GAA/BF,IAAI,CAACmB,EAAE,IAAInB,IAAI,CAACtB,GAAG;gBAAA4B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAiB,CAC9C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACN1E,OAAA;YAAAsE,QAAA,gBACEtE,OAAA;cAAAsE,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjB1E,OAAA,CAACd,QAAQ;cAACmG,KAAK,EAAE,GAAI;cAACC,MAAM,EAAE,GAAI;cAAAhB,QAAA,gBAChCtE,OAAA,CAACb,GAAG;gBACFmD,IAAI,EAAEsB,YAAY,CAAC,CAAE;gBACrB2B,OAAO,EAAC,OAAO;gBACfC,EAAE,EAAC,KAAK;gBACRC,EAAE,EAAC,KAAK;gBACRC,WAAW,EAAE,GAAI;gBAAApB,QAAA,EAEhBV,YAAY,CAAC,CAAC,CAACV,GAAG,CAAC,CAACyC,KAAK,EAAEC,KAAK,kBAC/B5F,OAAA,CAACZ,IAAI;kBAAuByG,IAAI,EAAElE,MAAM,CAACiE,KAAK,GAAGjE,MAAM,CAACoC,MAAM;gBAAE,GAArD,QAAQ6B,KAAK,EAAE;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAwC,CACnE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACN1E,OAAA,CAACX,MAAM;gBAAAkF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA,eACN,CACH,gBAED1E,OAAA;UAAAsE,QAAA,EAAG;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACpC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtE,EAAA,CArRID,GAAG;AAAA2F,EAAA,GAAH3F,GAAG;AAuRT,eAAeA,GAAG;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}