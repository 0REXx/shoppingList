{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Регистрация пользователя\nexport const registerUser = async userData => {\n  const response = await axios.post(`${BASE_URL}/auth/register`, userData);\n  return response.data;\n};\n\n// Авторизация пользователя\nexport const loginUser = async credentials => {\n  const response = await axios.post(`${BASE_URL}/auth/login`, credentials);\n  return response.data;\n};\n\n// Получение всех списков покупок пользователя\nexport const fetchShoppingLists = async () => {\n  const token = localStorage.getItem('token');\n  const response = await axios.get(`${BASE_URL}/shopping-lists`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Создание нового списка покупок\nexport const createShoppingList = async name => {\n  const token = localStorage.getItem('token');\n  const response = await axios.post(`${BASE_URL}/shopping-lists`, {\n    name\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Архивирование списка покупок\nexport const archiveShoppingList = async listId => {\n  const token = localStorage.getItem('token');\n  const response = await axios.put(`${BASE_URL}/shopping-lists/${listId}/archive`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n//Разархивировать список \nexport const unarchiveShoppingList = async listId => {\n  const token = localStorage.getItem('token');\n  const response = await axios.put(`${BASE_URL}/shopping-lists/${listId}/unarchive`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Удаление списка покупок\nexport const deleteShoppingList = async listId => {\n  const token = localStorage.getItem('token');\n  if (!listId) {\n    throw new Error('List ID is required to delete a shopping list.');\n  }\n  try {\n    const response = await axios.delete(`${BASE_URL}/shopping-lists/${listId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error in deleteShoppingList:', error);\n    throw error;\n  }\n};\n\n// Добавление участника (по email) в список покупок\nexport const addParticipantByEmail = async (listId, email) => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.post(`${BASE_URL}/shopping-lists/${listId}/participants`, {\n      email\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error in addParticipantByEmail:', error);\n    throw error;\n  }\n};\n\n// Добавление нового предмета в список\nexport const addItemToList = async (listId, itemName) => {\n  const token = localStorage.getItem('token');\n  const response = await axios.post(`${BASE_URL}/shopping-lists/${listId}/items`, {\n    name: itemName\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Удаление элемента из списка\nexport const deleteItemFromList = async (listId, itemId) => {\n  const token = localStorage.getItem('token');\n  const response = await axios.delete(`${BASE_URL}/shopping-lists/${listId}/items/${itemId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_API_URL","registerUser","userData","response","post","data","loginUser","credentials","fetchShoppingLists","token","localStorage","getItem","get","headers","Authorization","createShoppingList","name","archiveShoppingList","listId","put","unarchiveShoppingList","deleteShoppingList","Error","delete","error","console","addParticipantByEmail","email","addItemToList","itemName","deleteItemFromList","itemId"],"sources":["C:/Users/ab214/OneDrive/Рабочий стол/shopppinglist/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Регистрация пользователя\r\nexport const registerUser = async (userData) => {\r\n  const response = await axios.post(`${BASE_URL}/auth/register`, userData);\r\n  return response.data;\r\n};\r\n\r\n// Авторизация пользователя\r\nexport const loginUser = async (credentials) => {\r\n  const response = await axios.post(`${BASE_URL}/auth/login`, credentials);\r\n  return response.data;\r\n};\r\n\r\n// Получение всех списков покупок пользователя\r\nexport const fetchShoppingLists = async () => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios.get(`${BASE_URL}/shopping-lists`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data;\r\n};\r\n\r\n// Создание нового списка покупок\r\nexport const createShoppingList = async (name) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios.post(\r\n    `${BASE_URL}/shopping-lists`,\r\n    { name },\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Архивирование списка покупок\r\nexport const archiveShoppingList = async (listId) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios.put(\r\n    `${BASE_URL}/shopping-lists/${listId}/archive`,\r\n    {},\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n//Разархивировать список \r\nexport const unarchiveShoppingList = async (listId) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios.put(\r\n    `${BASE_URL}/shopping-lists/${listId}/unarchive`,\r\n    {},\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Удаление списка покупок\r\nexport const deleteShoppingList = async (listId) => {\r\n  const token = localStorage.getItem('token');\r\n  if (!listId) {\r\n    throw new Error('List ID is required to delete a shopping list.');\r\n  }\r\n  try {\r\n    const response = await axios.delete(`${BASE_URL}/shopping-lists/${listId}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error in deleteShoppingList:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// Добавление участника (по email) в список покупок\r\nexport const addParticipantByEmail = async (listId, email) => {\r\n  const token = localStorage.getItem('token');\r\n  try {\r\n    const response = await axios.post(\r\n      `${BASE_URL}/shopping-lists/${listId}/participants`,\r\n      { email },\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error in addParticipantByEmail:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// Добавление нового предмета в список\r\nexport const addItemToList = async (listId, itemName) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios.post(\r\n    `${BASE_URL}/shopping-lists/${listId}/items`,\r\n    { name: itemName },\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// Удаление элемента из списка\r\nexport const deleteItemFromList = async (listId, itemId) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios.delete(\r\n    `${BASE_URL}/shopping-lists/${listId}/items/${itemId}`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}