{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ab214\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\shopppinglist\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport './App.css';\nimport { registerUser, loginUser, fetchShoppingLists, createShoppingList, deleteShoppingList, archiveShoppingList, unarchiveShoppingList, addParticipantByEmail, addItemToList, toggleItemStatus, deleteItem, updateShoppingListName } from './services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [newParticipantEmail, setNewParticipantEmail] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [authMode, setAuthMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('en');\n  const COLORS = darkMode ? ['#4CAF50', '#F44336'] : ['#0088FE', '#FF8042'];\n  const translations = {\n    en: {\n      shoppingList: 'Shopping List',\n      addParticipant: 'Add Participant',\n      newListName: 'New List Name',\n      addNewList: 'Add New List',\n      participantEmail: 'Participant Email',\n      logout: 'Logout',\n      language: 'Language',\n      lightMode: 'Light Mode',\n      darkMode: 'Dark Mode',\n      archive: 'Archive',\n      unarchive: 'Unarchive',\n      delete: 'Delete',\n      addItem: 'Add Item',\n      newItem: 'New Item',\n      items: 'Items',\n      done: 'Done',\n      undone: 'Undone',\n      overview: 'Overview',\n      selectList: 'Select a list to view details',\n      ownerOnly: 'Only the owner can archive or unarchive the list',\n      archivedList: 'This list is archived. Changes are not allowed.'\n    },\n    ru: {\n      shoppingList: 'Список покупок',\n      addParticipant: 'Добавить участника',\n      newListName: 'Название нового списка',\n      addNewList: 'Добавить новый список',\n      participantEmail: 'Email участника',\n      logout: 'Выйти',\n      language: 'Язык',\n      lightMode: 'Светлая тема',\n      darkMode: 'Темная тема',\n      archive: 'Архивировать',\n      unarchive: 'Разархивировать',\n      delete: 'Удалить',\n      addItem: 'Добавить элемент',\n      newItem: 'Новый элемент',\n      items: 'Элементы',\n      done: 'Готово',\n      undone: 'Не готово',\n      overview: 'Обзор',\n      selectList: 'Выберите список для просмотра деталей',\n      ownerOnly: 'Только владелец может архивировать или разархивировать список',\n      archivedList: 'Этот список заархивирован. Изменения невозможны.'\n    }\n  };\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchShoppingLists().then(lists => setShoppingLists(lists)).catch(err => console.error('Error fetching shopping lists:', err));\n    }\n  }, [isAuthenticated]);\n  const handleAuthSubmit = async () => {\n    try {\n      setAuthError('');\n      if (authMode === 'register') {\n        await registerUser({\n          email,\n          password,\n          username\n        });\n        setAuthMode('login');\n      } else {\n        const response = await loginUser({\n          email,\n          password\n        });\n        localStorage.setItem('token', response.token);\n        setIsAuthenticated(true);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setAuthError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Authentication failed');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setEmail('');\n    setPassword('');\n    setMenuOpen(false);\n  };\n  const handleAddNewList = async () => {\n    if (!newListName.trim()) {\n      console.error('List name is empty');\n      return;\n    }\n    try {\n      const newList = await createShoppingList(newListName);\n      setShoppingLists([...shoppingLists, newList]);\n      setNewListName('');\n      setSelectedListId(newList._id);\n    } catch (err) {\n      console.error('Failed to add new list:', err);\n    }\n  };\n  const saveListNameToBackend = async listId => {\n    const list = shoppingLists.find(list => list._id === listId);\n    if (!list || !list.name.trim()) {\n      alert('List name cannot be empty');\n      return;\n    }\n    try {\n      const response = await fetch(`/api/shopping-lists/${listId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          name: list.name\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        throw new Error(errorData.message || 'Failed to update list name');\n      }\n      const updatedList = await response.json();\n      setShoppingLists(prevLists => prevLists.map(list => list._id === updatedList._id ? {\n        ...list,\n        name: updatedList.name\n      } : list));\n    } catch (err) {\n      console.error('Failed to save list name:', err.message);\n      alert('Error saving list name: ' + err.message);\n    }\n  };\n  const handleDeleteList = async listId => {\n    try {\n      await deleteShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.filter(list => list._id !== listId));\n      if (listId === selectedListId) {\n        setSelectedListId(null);\n      }\n    } catch (err) {\n      console.error('Failed to delete list:', err);\n    }\n  };\n  const handleArchiveList = async listId => {\n    const selectedList = shoppingLists.find(list => list._id === listId);\n    if (!selectedList.owner) {\n      alert(t.ownerOnly);\n      return;\n    }\n    try {\n      await archiveShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === listId ? {\n        ...list,\n        archived: true\n      } : list));\n    } catch (err) {\n      console.error('Failed to archive list:', err);\n    }\n  };\n  const handleUnarchiveList = async listId => {\n    const selectedList = shoppingLists.find(list => list._id === listId);\n    if (!selectedList.owner) {\n      alert(t.ownerOnly);\n      return;\n    }\n    try {\n      await unarchiveShoppingList(listId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === listId ? {\n        ...list,\n        archived: false\n      } : list));\n    } catch (err) {\n      console.error('Failed to unarchive list:', err);\n    }\n  };\n  const handleAddParticipant = async () => {\n    if (!newParticipantEmail.trim() || !selectedListId) {\n      console.error('No email or list selected');\n      return;\n    }\n    try {\n      const updatedList = await addParticipantByEmail(selectedListId, newParticipantEmail);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        participants: updatedList.participants\n      } : list));\n      setNewParticipantEmail('');\n    } catch (err) {\n      console.error('Failed to add participant:', err);\n    }\n  };\n  const handleAddItem = async () => {\n    if (!newItemName.trim() || !selectedListId) return;\n    const selectedList = shoppingLists.find(list => list._id === selectedListId);\n    if (selectedList.archived) {\n      alert(t.archivedList);\n      return;\n    }\n    try {\n      const updatedList = await addItemToList(selectedListId, newItemName);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: updatedList.items\n      } : list));\n      setNewItemName('');\n    } catch (err) {\n      console.error('Failed to add item:', err);\n    }\n  };\n  const handleToggleItemStatus = async itemId => {\n    const selectedList = shoppingLists.find(list => list._id === selectedListId);\n    if (selectedList.archived) {\n      alert(t.archivedList);\n      return;\n    }\n    try {\n      const updatedItem = await toggleItemStatus(selectedListId, itemId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: list.items.map(item => item._id === itemId ? {\n          ...item,\n          resolved: updatedItem.item.resolved\n        } : item)\n      } : list));\n    } catch (err) {\n      console.error('Failed to toggle item status:', err);\n    }\n  };\n  const handleDeleteItem = async itemId => {\n    if (!selectedListId) return;\n    try {\n      await deleteItem(selectedListId, itemId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: list.items.filter(item => item._id !== itemId)\n      } : list));\n    } catch (err) {\n      console.error('Failed to delete item:', err);\n    }\n  };\n  const handleSelectList = listId => {\n    const list = shoppingLists.find(list => list._id === listId);\n    if (list) {\n      setSelectedListId(listId);\n    } else {\n      console.error('No list found with ID:', listId);\n    }\n  };\n  const getChartData = () => {\n    const selectedList = shoppingLists.find(list => list._id === selectedListId);\n    if (!selectedList) return [];\n    const totalItems = selectedList.items.length;\n    const resolvedItems = selectedList.items.filter(item => item.resolved).length;\n    return [{\n      name: t.done,\n      value: resolvedItems\n    }, {\n      name: t.undone,\n      value: totalItems - resolvedItems\n    }];\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.className = darkMode ? 'light-mode' : 'dark-mode';\n  };\n  const switchLanguage = lang => {\n    setLanguage(lang);\n  };\n  const t = translations[language];\n  const selectedList = shoppingLists.find(list => list._id === selectedListId);\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: authMode === 'login' ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), authError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: authError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), authMode === 'register' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAuthSubmit,\n        children: authMode === 'login' ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: authMode === 'login' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setAuthMode('register'),\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setAuthMode('login'),\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : 'light-mode'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-icon-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-icon\",\n        onClick: () => setMenuOpen(!menuOpen),\n        children: \"\\u2699\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: t.logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDarkMode,\n          children: darkMode ? t.lightMode : t.darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: t.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => switchLanguage('en'),\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => switchLanguage('ru'),\n            children: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t.shoppingList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t.shoppingList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: t.newListName,\n          value: newListName,\n          onChange: e => setNewListName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewList,\n          children: t.addNewList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lists-container\",\n          children: shoppingLists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${list._id === selectedListId ? 'selected' : ''}`,\n            onClick: () => handleSelectList(list._id),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-name-display\",\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), list.archived ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"unarchive-button\",\n              onClick: e => {\n                e.stopPropagation();\n                handleUnarchiveList(list._id);\n              },\n              children: t.unarchive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"archive-button\",\n              onClick: e => {\n                e.stopPropagation();\n                handleArchiveList(list._id);\n              },\n              children: t.archive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteList(list._id);\n              },\n              children: t.delete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this)]\n          }, list._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), selectedList && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: t.participants\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: t.participantEmail,\n            value: newParticipantEmail,\n            onChange: e => setNewParticipantEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddParticipant,\n            children: t.addParticipant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (selectedList.participants || []).map(participant => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: participant.email\n            }, participant._id || participant.email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: selectedList ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit List Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedList.name,\n            onChange: e => {\n              // Временно обновляем состояние для мгновенного визуального эффекта\n              setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n                ...list,\n                name: e.target.value\n              } : list));\n            },\n            onBlur: e => saveListNameToBackend(selectedListId, e.target.value),\n            placeholder: \"Edit List Name\",\n            className: \"edit-list-name-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: t.items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: t.newItem,\n            value: newItemName,\n            onChange: e => setNewItemName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddItem,\n            children: t.addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (selectedList.items || []).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  textDecoration: item.resolved ? 'line-through' : 'none'\n                },\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleToggleItemStatus(item._id),\n                children: item.resolved ? t.undone : t.done\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteItem(item._id),\n                children: t.delete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 21\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: t.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n              width: 300,\n              height: 300,\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: getChartData(),\n                dataKey: \"value\",\n                cx: \"50%\",\n                cy: \"50%\",\n                outerRadius: 100,\n                children: getChartData().map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t.selectList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qCC1mcEKMiR0IKBzPBxDO15E7I4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","Legend","registerUser","loginUser","fetchShoppingLists","createShoppingList","deleteShoppingList","archiveShoppingList","unarchiveShoppingList","addParticipantByEmail","addItemToList","toggleItemStatus","deleteItem","updateShoppingListName","jsxDEV","_jsxDEV","App","_s","shoppingLists","setShoppingLists","newListName","setNewListName","newParticipantEmail","setNewParticipantEmail","newItemName","setNewItemName","selectedListId","setSelectedListId","isAuthenticated","setIsAuthenticated","localStorage","getItem","authMode","setAuthMode","email","setEmail","password","setPassword","username","setUsername","authError","setAuthError","menuOpen","setMenuOpen","darkMode","setDarkMode","language","setLanguage","COLORS","translations","en","shoppingList","addParticipant","addNewList","participantEmail","logout","lightMode","archive","unarchive","delete","addItem","newItem","items","done","undone","overview","selectList","ownerOnly","archivedList","ru","then","lists","catch","err","console","error","handleAuthSubmit","response","setItem","token","_err$response","_err$response$data","data","message","handleLogout","removeItem","handleAddNewList","trim","newList","_id","saveListNameToBackend","listId","list","find","name","alert","fetch","method","headers","Authorization","body","JSON","stringify","ok","errorData","json","Error","updatedList","prevLists","map","handleDeleteList","filter","handleArchiveList","selectedList","owner","t","archived","handleUnarchiveList","handleAddParticipant","participants","handleAddItem","handleToggleItemStatus","itemId","updatedItem","item","resolved","handleDeleteItem","handleSelectList","getChartData","totalItems","length","resolvedItems","value","toggleDarkMode","document","className","switchLanguage","lang","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","stopPropagation","participant","onBlur","style","textDecoration","width","height","dataKey","cx","cy","outerRadius","entry","index","fill","_c","$RefreshReg$"],"sources":["C:/Users/ab214/OneDrive/Рабочий стол/shopppinglist/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport './App.css';\nimport {\n  registerUser,\n  loginUser,\n  fetchShoppingLists,\n  createShoppingList,\n  deleteShoppingList,\n  archiveShoppingList,\n  unarchiveShoppingList,\n  addParticipantByEmail,\n  addItemToList,\n  toggleItemStatus,\n  deleteItem,\n  updateShoppingListName,\n} from './services/apiService';\n\nconst App = () => {\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [newParticipantEmail, setNewParticipantEmail] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [authMode, setAuthMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('en');\n  const COLORS = darkMode ? ['#4CAF50', '#F44336'] : ['#0088FE', '#FF8042'];\n\n  const translations = {\n    en: {\n      shoppingList: 'Shopping List',\n      addParticipant: 'Add Participant',\n      newListName: 'New List Name',\n      addNewList: 'Add New List',\n      participantEmail: 'Participant Email',\n      logout: 'Logout',\n      language: 'Language',\n      lightMode: 'Light Mode',\n      darkMode: 'Dark Mode',\n      archive: 'Archive',\n      unarchive: 'Unarchive',\n      delete: 'Delete',\n      addItem: 'Add Item',\n      newItem: 'New Item',\n      items: 'Items',\n      done: 'Done',\n      undone: 'Undone',\n      overview: 'Overview',\n      selectList: 'Select a list to view details',\n      ownerOnly: 'Only the owner can archive or unarchive the list',\n      archivedList: 'This list is archived. Changes are not allowed.',\n    },\n    ru: {\n      shoppingList: 'Список покупок',\n      addParticipant: 'Добавить участника',\n      newListName: 'Название нового списка',\n      addNewList: 'Добавить новый список',\n      participantEmail: 'Email участника',\n      logout: 'Выйти',\n      language: 'Язык',\n      lightMode: 'Светлая тема',\n      darkMode: 'Темная тема',\n      archive: 'Архивировать',\n      unarchive: 'Разархивировать',\n      delete: 'Удалить',\n      addItem: 'Добавить элемент',\n      newItem: 'Новый элемент',\n      items: 'Элементы',\n      done: 'Готово',\n      undone: 'Не готово',\n      overview: 'Обзор',\n      selectList: 'Выберите список для просмотра деталей',\n      ownerOnly: 'Только владелец может архивировать или разархивировать список',\n      archivedList: 'Этот список заархивирован. Изменения невозможны.',\n    },\n  };\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchShoppingLists()\n        .then((lists) => setShoppingLists(lists))\n        .catch((err) => console.error('Error fetching shopping lists:', err));\n    }\n  }, [isAuthenticated]);\n\n  const handleAuthSubmit = async () => {\n    try {\n      setAuthError('');\n      if (authMode === 'register') {\n        await registerUser({ email, password, username });\n        setAuthMode('login');\n      } else {\n        const response = await loginUser({ email, password });\n        localStorage.setItem('token', response.token);\n        setIsAuthenticated(true);\n      }\n    } catch (err) {\n      setAuthError(err.response?.data?.message || 'Authentication failed');\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setEmail('');\n    setPassword('');\n    setMenuOpen(false);\n  };\n\n  const handleAddNewList = async () => {\n    if (!newListName.trim()) {\n      console.error('List name is empty');\n      return;\n    }\n\n    try {\n      const newList = await createShoppingList(newListName);\n      setShoppingLists([...shoppingLists, newList]);\n      setNewListName('');\n      setSelectedListId(newList._id);\n    } catch (err) {\n      console.error('Failed to add new list:', err);\n    }\n  };\n\n\n  const saveListNameToBackend = async (listId) => {\n    const list = shoppingLists.find((list) => list._id === listId);\n  \n    if (!list || !list.name.trim()) {\n        alert('List name cannot be empty');\n        return;\n    }\n  \n    try {\n        const response = await fetch(`/api/shopping-lists/${listId}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n            body: JSON.stringify({ name: list.name }),\n        });\n  \n        if (!response.ok) {\n            const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n            throw new Error(errorData.message || 'Failed to update list name');\n        }\n  \n        const updatedList = await response.json();\n        setShoppingLists((prevLists) =>\n            prevLists.map((list) =>\n                list._id === updatedList._id ? { ...list, name: updatedList.name } : list\n            )\n        );\n    } catch (err) {\n        console.error('Failed to save list name:', err.message);\n        alert('Error saving list name: ' + err.message);\n    }\n  };\n  \n\n\n  \n\n  const handleDeleteList = async (listId) => {\n    try {\n      await deleteShoppingList(listId);\n      setShoppingLists((prevLists) => prevLists.filter((list) => list._id !== listId));\n      if (listId === selectedListId) {\n        setSelectedListId(null);\n      }\n    } catch (err) {\n      console.error('Failed to delete list:', err);\n    }\n  };\n\n  const handleArchiveList = async (listId) => {\n    const selectedList = shoppingLists.find((list) => list._id === listId);\n    if (!selectedList.owner) {\n      alert(t.ownerOnly);\n      return;\n    }\n\n    try {\n      await archiveShoppingList(listId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === listId ? { ...list, archived: true } : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to archive list:', err);\n    }\n  };\n\n  const handleUnarchiveList = async (listId) => {\n    const selectedList = shoppingLists.find((list) => list._id === listId);\n    if (!selectedList.owner) {\n      alert(t.ownerOnly);\n      return;\n    }\n\n    try {\n      await unarchiveShoppingList(listId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === listId ? { ...list, archived: false } : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to unarchive list:', err);\n    }\n  };\n\n  const handleAddParticipant = async () => {\n    if (!newParticipantEmail.trim() || !selectedListId) {\n      console.error('No email or list selected');\n      return;\n    }\n\n    try {\n      const updatedList = await addParticipantByEmail(selectedListId, newParticipantEmail);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId ? { ...list, participants: updatedList.participants } : list\n        )\n      );\n      setNewParticipantEmail('');\n    } catch (err) {\n      console.error('Failed to add participant:', err);\n    }\n  };\n\n  const handleAddItem = async () => {\n    if (!newItemName.trim() || !selectedListId) return;\n\n    const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n    if (selectedList.archived) {\n      alert(t.archivedList);\n      return;\n    }\n\n    try {\n      const updatedList = await addItemToList(selectedListId, newItemName);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId ? { ...list, items: updatedList.items } : list\n        )\n      );\n      setNewItemName('');\n    } catch (err) {\n      console.error('Failed to add item:', err);\n    }\n  };\n\n  const handleToggleItemStatus = async (itemId) => {\n    const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n    if (selectedList.archived) {\n      alert(t.archivedList);\n      return;\n    }\n\n    try {\n      const updatedItem = await toggleItemStatus(selectedListId, itemId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId\n            ? {\n                ...list,\n                items: list.items.map((item) =>\n                  item._id === itemId ? { ...item, resolved: updatedItem.item.resolved } : item\n                ),\n              }\n            : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to toggle item status:', err);\n    }\n  };\n\n  const handleDeleteItem = async (itemId) => {\n    if (!selectedListId) return;\n\n    try {\n      await deleteItem(selectedListId, itemId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId\n            ? { ...list, items: list.items.filter((item) => item._id !== itemId) }\n            : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to delete item:', err);\n    }\n  };\n\n  const handleSelectList = (listId) => {\n    const list = shoppingLists.find((list) => list._id === listId);\n    if (list) {\n      setSelectedListId(listId);\n    } else {\n      console.error('No list found with ID:', listId);\n    }\n  };\n\n  const getChartData = () => {\n    const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n    if (!selectedList) return [];\n    const totalItems = selectedList.items.length;\n    const resolvedItems = selectedList.items.filter((item) => item.resolved).length;\n    return [\n      { name: t.done, value: resolvedItems },\n      { name: t.undone, value: totalItems - resolvedItems },\n    ];\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.className = darkMode ? 'light-mode' : 'dark-mode';\n  };\n\n  const switchLanguage = (lang) => {\n    setLanguage(lang);\n  };\n\n  const t = translations[language];\n\n  const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"auth-container\">\n        <h1>{authMode === 'login' ? 'Login' : 'Register'}</h1>\n        {authError && <p className=\"error\">{authError}</p>}\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        {authMode === 'register' && (\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        )}\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button onClick={handleAuthSubmit}>\n          {authMode === 'login' ? 'Login' : 'Register'}\n        </button>\n        <p>\n          {authMode === 'login' ? (\n            <span onClick={() => setAuthMode('register')}>Create an account</span>\n          ) : (\n            <span onClick={() => setAuthMode('login')}>Already have an account?</span>\n          )}\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : 'light-mode'}`}>\n      <div className=\"settings-icon-container\">\n        <div className=\"settings-icon\" onClick={() => setMenuOpen(!menuOpen)}>\n          ⚙️\n        </div>\n        {menuOpen && (\n          <div className=\"settings-menu\">\n            <button onClick={handleLogout}>{t.logout}</button>\n            <button onClick={toggleDarkMode}>\n              {darkMode ? t.lightMode : t.darkMode}\n            </button>\n            <div>\n              <h4>{t.language}</h4>\n              <button onClick={() => switchLanguage('en')}>English</button>\n              <button onClick={() => switchLanguage('ru')}>Русский</button>\n            </div>\n          </div>\n        )}\n      </div>\n      <h1>{t.shoppingList}</h1>\n      <div className=\"container\">\n        <div className=\"sidebar\">\n          <h2>{t.shoppingList}</h2>\n          <input\n            type=\"text\"\n            placeholder={t.newListName}\n            value={newListName}\n            onChange={(e) => setNewListName(e.target.value)}\n          />\n          <button onClick={handleAddNewList}>{t.addNewList}</button>\n          <div className=\"lists-container\">\n            {shoppingLists.map((list) => (\n              <div\n                key={list._id}\n                className={`list-item ${list._id === selectedListId ? 'selected' : ''}`}\n                onClick={() => handleSelectList(list._id)}\n              >\n                <span className=\"list-name-display\">{list.name}</span>\n                {list.archived ? (\n                  <button\n                    className=\"unarchive-button\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleUnarchiveList(list._id);\n                    }}\n                  >\n                    {t.unarchive}\n                  </button>\n                ) : (\n                  <button\n                    className=\"archive-button\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleArchiveList(list._id);\n                    }}\n                  >\n                    {t.archive}\n                  </button>\n                )}\n                <button\n                  className=\"delete-button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleDeleteList(list._id);\n                  }}\n                >\n                  {t.delete}\n                </button>\n              </div>\n            ))}\n          </div>\n          {selectedList && (\n            <div>\n              <h3>{t.participants}</h3>\n              <input\n                type=\"text\"\n                placeholder={t.participantEmail}\n                value={newParticipantEmail}\n                onChange={(e) => setNewParticipantEmail(e.target.value)}\n              />\n              <button onClick={handleAddParticipant}>{t.addParticipant}</button>\n              <ul>\n                {(selectedList.participants || []).map((participant) => (\n                  <li key={participant._id || participant.email}>{participant.email}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        <div className=\"main-content\">\n  {selectedList ? (\n    <div>\n      <h2>Edit List Name</h2>\n      <input\n        type=\"text\"\n        value={selectedList.name}\n        onChange={(e) => {\n          // Временно обновляем состояние для мгновенного визуального эффекта\n          setShoppingLists((prevLists) =>\n            prevLists.map((list) =>\n              list._id === selectedListId\n                ? { ...list, name: e.target.value }\n                : list\n            )\n          );\n        }}\n        onBlur={(e) => saveListNameToBackend(selectedListId, e.target.value)}\n        placeholder=\"Edit List Name\"\n        className=\"edit-list-name-input\"\n      />\n              <h3>{t.items}</h3>\n              <input\n                type=\"text\"\n                placeholder={t.newItem}\n                value={newItemName}\n                onChange={(e) => setNewItemName(e.target.value)}\n              />\n              <button onClick={handleAddItem}>{t.addItem}</button>\n              <ul>\n                {(selectedList.items || []).map((item) => (\n                  <li key={item._id}>\n                    <span\n                      style={{\n                        textDecoration: item.resolved ? 'line-through' : 'none',\n                      }}\n                    >\n                      {item.name}\n                    </span>\n                    <button onClick={() => handleToggleItemStatus(item._id)}>\n                      {item.resolved ? t.undone : t.done}\n                    </button>\n                    <button onClick={() => handleDeleteItem(item._id)}>{t.delete}</button>\n                  </li>\n                ))}\n              </ul>\n              <div>\n                <h3>{t.overview}</h3>\n                <PieChart width={300} height={300}>\n                  <Pie\n                    data={getChartData()}\n                    dataKey=\"value\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={100}\n                  >\n                    {getChartData().map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Legend />\n                </PieChart>\n              </div>\n            </div>\n          ) : (\n            <p>{t.selectList}</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n  \n};\n\nexport default App;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}