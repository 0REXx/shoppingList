{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ab214\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\shopppinglist\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Импорт React и других необходимых библиотек\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport './App.css';\nimport { registerUser, loginUser, fetchShoppingLists, createShoppingList, deleteShoppingList, archiveShoppingList, unarchiveShoppingList, addParticipantByEmail, addItemToList, toggleItemStatus, deleteItem } from './services/apiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [newParticipantEmail, setNewParticipantEmail] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [authMode, setAuthMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('en');\n  const COLORS = ['#0088FE', '#FF8042'];\n  const translations = {\n    en: {\n      shoppingList: 'Shopping List',\n      newListName: 'New list name',\n      addNewList: 'Add New List',\n      newItem: 'New Item',\n      addItem: 'Add Item',\n      participants: 'Participants',\n      addParticipant: 'Add Participant',\n      logout: 'Logout',\n      darkMode: 'Dark Mode',\n      lightMode: 'Light Mode',\n      language: 'Language',\n      done: 'Done',\n      undone: 'Undone',\n      delete: 'Delete',\n      resolved: 'Resolved',\n      unresolved: 'Unresolved',\n      archived: 'Archived',\n      unarchive: 'Unarchive',\n      archive: 'Archive',\n      selectList: 'Select a list to view details'\n    },\n    ru: {\n      shoppingList: 'Список покупок',\n      newListName: 'Новое имя списка',\n      addNewList: 'Добавить список',\n      newItem: 'Новый предмет',\n      addItem: 'Добавить предмет',\n      participants: 'Участники',\n      addParticipant: 'Добавить участника',\n      logout: 'Выйти',\n      darkMode: 'Темная тема',\n      lightMode: 'Светлая тема',\n      language: 'Язык',\n      done: 'Готово',\n      undone: 'Отменить',\n      delete: 'Удалить',\n      resolved: 'Выполнено',\n      unresolved: 'Невыполнено',\n      archived: 'Архивировано',\n      unarchive: 'Разархивировать',\n      archive: 'Архивировать',\n      selectList: 'Выберите список, чтобы увидеть детали'\n    }\n  };\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchShoppingLists().then(lists => setShoppingLists(lists)).catch(err => console.error('Error fetching shopping lists:', err));\n    }\n  }, [isAuthenticated]);\n  const handleAuthSubmit = async () => {\n    try {\n      setAuthError('');\n      if (authMode === 'register') {\n        await registerUser({\n          email,\n          password,\n          username\n        });\n        setAuthMode('login');\n      } else {\n        const response = await loginUser({\n          email,\n          password\n        });\n        localStorage.setItem('token', response.token);\n        setIsAuthenticated(true);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setAuthError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Authentication failed');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setEmail('');\n    setPassword('');\n    setMenuOpen(false);\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.className = darkMode ? 'light-mode' : 'dark-mode';\n  };\n  const switchLanguage = lang => {\n    setLanguage(lang);\n  };\n  const handleAddNewList = async () => {\n    if (!newListName.trim()) {\n      console.error('List name is empty');\n      return;\n    }\n    try {\n      const newList = await createShoppingList(newListName);\n      setShoppingLists([...shoppingLists, newList]);\n      setNewListName('');\n      setSelectedListId(newList._id);\n    } catch (err) {\n      console.error('Failed to add new list:', err);\n    }\n  };\n  const handleAddParticipant = async () => {\n    if (!newParticipantEmail.trim() || !selectedListId) {\n      console.error('No email or list selected');\n      return;\n    }\n    try {\n      const updatedList = await addParticipantByEmail(selectedListId, newParticipantEmail);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        participants: updatedList.participants\n      } : list));\n      setNewParticipantEmail('');\n    } catch (err) {\n      console.error('Failed to add participant:', err);\n    }\n  };\n  const handleAddItem = async () => {\n    if (!newItemName.trim() || !selectedListId) return;\n    try {\n      const updatedList = await addItemToList(selectedListId, newItemName);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: updatedList.items\n      } : list));\n      setNewItemName('');\n    } catch (err) {\n      console.error('Failed to add item:', err);\n    }\n  };\n  const handleToggleItemStatus = async itemId => {\n    if (!selectedListId) return;\n    try {\n      const updatedItem = await toggleItemStatus(selectedListId, itemId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: list.items.map(item => item._id === itemId ? {\n          ...item,\n          resolved: updatedItem.item.resolved\n        } : item)\n      } : list));\n    } catch (err) {\n      console.error('Failed to toggle item status:', err);\n    }\n  };\n  const handleDeleteItem = async itemId => {\n    if (!selectedListId) return;\n    try {\n      await deleteItem(selectedListId, itemId);\n      setShoppingLists(prevLists => prevLists.map(list => list._id === selectedListId ? {\n        ...list,\n        items: list.items.filter(item => item._id !== itemId)\n      } : list));\n    } catch (err) {\n      console.error('Failed to delete item:', err);\n    }\n  };\n  const selectedList = shoppingLists.find(list => list._id === selectedListId);\n  const t = translations[language];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : 'light-mode'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-icon-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-icon\",\n        onClick: () => setMenuOpen(!menuOpen),\n        children: \"\\u2699\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: t.logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDarkMode,\n          children: darkMode ? t.lightMode : t.darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: t.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => switchLanguage('en'),\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => switchLanguage('ru'),\n            children: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t.shoppingList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t.shoppingList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: t.newListName,\n          value: newListName,\n          onChange: e => setNewListName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewList,\n          children: t.addNewList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lists-container\",\n          children: shoppingLists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${list._id === selectedListId ? 'selected' : ''}`,\n            onClick: () => setSelectedListId(list._id),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)\n          }, list._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), selectedList && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: t.participants\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: t.addParticipant,\n            value: newParticipantEmail,\n            onChange: e => setNewParticipantEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddParticipant,\n            children: t.addParticipant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: selectedList.participants.map(participant => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: participant.email\n            }, participant._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: selectedList && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedList.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: t.newItem,\n            value: newItemName,\n            onChange: e => setNewItemName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddItem,\n            children: t.addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: selectedList.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this)\n            }, item._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qCC1mcEKMiR0IKBzPBxDO15E7I4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","Legend","registerUser","loginUser","fetchShoppingLists","createShoppingList","deleteShoppingList","archiveShoppingList","unarchiveShoppingList","addParticipantByEmail","addItemToList","toggleItemStatus","deleteItem","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","shoppingLists","setShoppingLists","newListName","setNewListName","newParticipantEmail","setNewParticipantEmail","newItemName","setNewItemName","selectedListId","setSelectedListId","isAuthenticated","setIsAuthenticated","localStorage","getItem","authMode","setAuthMode","email","setEmail","password","setPassword","username","setUsername","authError","setAuthError","menuOpen","setMenuOpen","darkMode","setDarkMode","language","setLanguage","COLORS","translations","en","shoppingList","addNewList","newItem","addItem","participants","addParticipant","logout","lightMode","done","undone","delete","resolved","unresolved","archived","unarchive","archive","selectList","ru","then","lists","catch","err","console","error","handleAuthSubmit","response","setItem","token","_err$response","_err$response$data","data","message","handleLogout","removeItem","toggleDarkMode","document","body","className","switchLanguage","lang","handleAddNewList","trim","newList","_id","handleAddParticipant","updatedList","prevLists","map","list","handleAddItem","items","handleToggleItemStatus","itemId","updatedItem","item","handleDeleteItem","filter","selectedList","find","t","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","name","participant","_c","$RefreshReg$"],"sources":["C:/Users/ab214/OneDrive/Рабочий стол/shopppinglist/frontend/src/App.js"],"sourcesContent":["// Импорт React и других необходимых библиотек\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nimport './App.css';\nimport {\n  registerUser,\n  loginUser,\n  fetchShoppingLists,\n  createShoppingList,\n  deleteShoppingList,\n  archiveShoppingList,\n  unarchiveShoppingList,\n  addParticipantByEmail,\n  addItemToList,\n  toggleItemStatus,\n  deleteItem,\n} from './services/apiService';\n\nconst App = () => {\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  const [newParticipantEmail, setNewParticipantEmail] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [authMode, setAuthMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('en');\n  const COLORS = ['#0088FE', '#FF8042'];\n\n  const translations = {\n    en: {\n      shoppingList: 'Shopping List',\n      newListName: 'New list name',\n      addNewList: 'Add New List',\n      newItem: 'New Item',\n      addItem: 'Add Item',\n      participants: 'Participants',\n      addParticipant: 'Add Participant',\n      logout: 'Logout',\n      darkMode: 'Dark Mode',\n      lightMode: 'Light Mode',\n      language: 'Language',\n      done: 'Done',\n      undone: 'Undone',\n      delete: 'Delete',\n      resolved: 'Resolved',\n      unresolved: 'Unresolved',\n      archived: 'Archived',\n      unarchive: 'Unarchive',\n      archive: 'Archive',\n      selectList: 'Select a list to view details',\n    },\n    ru: {\n      shoppingList: 'Список покупок',\n      newListName: 'Новое имя списка',\n      addNewList: 'Добавить список',\n      newItem: 'Новый предмет',\n      addItem: 'Добавить предмет',\n      participants: 'Участники',\n      addParticipant: 'Добавить участника',\n      logout: 'Выйти',\n      darkMode: 'Темная тема',\n      lightMode: 'Светлая тема',\n      language: 'Язык',\n      done: 'Готово',\n      undone: 'Отменить',\n      delete: 'Удалить',\n      resolved: 'Выполнено',\n      unresolved: 'Невыполнено',\n      archived: 'Архивировано',\n      unarchive: 'Разархивировать',\n      archive: 'Архивировать',\n      selectList: 'Выберите список, чтобы увидеть детали',\n    },\n  };\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchShoppingLists()\n        .then((lists) => setShoppingLists(lists))\n        .catch((err) => console.error('Error fetching shopping lists:', err));\n    }\n  }, [isAuthenticated]);\n\n  const handleAuthSubmit = async () => {\n    try {\n      setAuthError('');\n      if (authMode === 'register') {\n        await registerUser({ email, password, username });\n        setAuthMode('login');\n      } else {\n        const response = await loginUser({ email, password });\n        localStorage.setItem('token', response.token);\n        setIsAuthenticated(true);\n      }\n    } catch (err) {\n      setAuthError(err.response?.data?.message || 'Authentication failed');\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setEmail('');\n    setPassword('');\n    setMenuOpen(false);\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.className = darkMode ? 'light-mode' : 'dark-mode';\n  };\n\n  const switchLanguage = (lang) => {\n    setLanguage(lang);\n  };\n\n  const handleAddNewList = async () => {\n    if (!newListName.trim()) {\n      console.error('List name is empty');\n      return;\n    }\n\n    try {\n      const newList = await createShoppingList(newListName);\n      setShoppingLists([...shoppingLists, newList]);\n      setNewListName('');\n      setSelectedListId(newList._id);\n    } catch (err) {\n      console.error('Failed to add new list:', err);\n    }\n  };\n\n  const handleAddParticipant = async () => {\n    if (!newParticipantEmail.trim() || !selectedListId) {\n      console.error('No email or list selected');\n      return;\n    }\n\n    try {\n      const updatedList = await addParticipantByEmail(selectedListId, newParticipantEmail);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId ? { ...list, participants: updatedList.participants } : list\n        )\n      );\n      setNewParticipantEmail('');\n    } catch (err) {\n      console.error('Failed to add participant:', err);\n    }\n  };\n\n  const handleAddItem = async () => {\n    if (!newItemName.trim() || !selectedListId) return;\n    try {\n      const updatedList = await addItemToList(selectedListId, newItemName);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId ? { ...list, items: updatedList.items } : list\n        )\n      );\n      setNewItemName('');\n    } catch (err) {\n      console.error('Failed to add item:', err);\n    }\n  };\n\n  const handleToggleItemStatus = async (itemId) => {\n    if (!selectedListId) return;\n\n    try {\n      const updatedItem = await toggleItemStatus(selectedListId, itemId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId\n            ? {\n                ...list,\n                items: list.items.map((item) =>\n                  item._id === itemId ? { ...item, resolved: updatedItem.item.resolved } : item\n                ),\n              }\n            : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to toggle item status:', err);\n    }\n  };\n\n  const handleDeleteItem = async (itemId) => {\n    if (!selectedListId) return;\n\n    try {\n      await deleteItem(selectedListId, itemId);\n      setShoppingLists((prevLists) =>\n        prevLists.map((list) =>\n          list._id === selectedListId\n            ? { ...list, items: list.items.filter((item) => item._id !== itemId) }\n            : list\n        )\n      );\n    } catch (err) {\n      console.error('Failed to delete item:', err);\n    }\n  };\n\n  const selectedList = shoppingLists.find((list) => list._id === selectedListId);\n  const t = translations[language];\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : 'light-mode'}`}>\n      <div className=\"settings-icon-container\">\n        <div className=\"settings-icon\" onClick={() => setMenuOpen(!menuOpen)}>\n          ⚙️\n        </div>\n        {menuOpen && (\n          <div className=\"settings-menu\">\n            <button onClick={handleLogout}>{t.logout}</button>\n            <button onClick={toggleDarkMode}>\n              {darkMode ? t.lightMode : t.darkMode}\n            </button>\n            <div>\n              <h4>{t.language}</h4>\n              <button onClick={() => switchLanguage('en')}>English</button>\n              <button onClick={() => switchLanguage('ru')}>Русский</button>\n            </div>\n          </div>\n        )}\n      </div>\n      <h1>{t.shoppingList}</h1>\n      <div className=\"container\">\n        <div className=\"sidebar\">\n          <h2>{t.shoppingList}</h2>\n          <input\n            type=\"text\"\n            placeholder={t.newListName}\n            value={newListName}\n            onChange={(e) => setNewListName(e.target.value)}\n          />\n          <button onClick={handleAddNewList}>{t.addNewList}</button>\n          <div className=\"lists-container\">\n            {shoppingLists.map((list) => (\n              <div\n                key={list._id}\n                className={`list-item ${list._id === selectedListId ? 'selected' : ''}`}\n                onClick={() => setSelectedListId(list._id)}\n              >\n                <span>{list.name}</span>\n              </div>\n            ))}\n          </div>\n          {selectedList && (\n            <div>\n              <h3>{t.participants}</h3>\n              <input\n                type=\"text\"\n                placeholder={t.addParticipant}\n                value={newParticipantEmail}\n                onChange={(e) => setNewParticipantEmail(e.target.value)}\n              />\n              <button onClick={handleAddParticipant}>{t.addParticipant}</button>\n              <ul>\n                {selectedList.participants.map((participant) => (\n                  <li key={participant._id}>{participant.email}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        <div className=\"main-content\">\n          {selectedList && (\n            <>\n              <h2>{selectedList.name}</h2>\n              <input\n                type=\"text\"\n                placeholder={t.newItem}\n                value={newItemName}\n                onChange={(e) => setNewItemName(e.target.value)}\n              />\n              <button onClick={handleAddItem}>{t.addItem}</button>\n              <ul>\n                {selectedList.items.map((item) => (\n                  <li key={item._id}>\n                    <span>{item.name}</span>\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}